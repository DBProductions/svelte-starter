{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/src/runtime/internal/utils.js","../../node_modules/svelte/src/runtime/internal/environment.js","../../node_modules/svelte/src/runtime/internal/loop.js","../../node_modules/svelte/src/runtime/internal/dom.js","../../node_modules/svelte/src/runtime/internal/style_manager.js","../../node_modules/svelte/src/runtime/internal/lifecycle.js","../../node_modules/svelte/src/runtime/internal/scheduler.js","../../node_modules/svelte/src/runtime/internal/transitions.js","../../node_modules/svelte/src/runtime/internal/each.js","../../node_modules/svelte/src/runtime/internal/Component.js","../../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../../node_modules/svelte/src/shared/version.js","../../node_modules/svelte/src/runtime/store/index.js","../../src/stores.js","../../src/components/Headline.svelte","../../src/components/ListItem.svelte","../../src/components/List.svelte","../../src/components/Table.svelte","../../src/components/Button.svelte","../../node_modules/svelte/src/runtime/easing/index.js","../../node_modules/svelte/src/runtime/transition/index.js","../../src/components/Modal.svelte","../../src/components/ModalDialog.svelte","../../src/components/ModalForm.svelte","../../src/components/UserInput.svelte","../../src/components/RadioBoxes.svelte","../../src/components/Contenteditable.svelte","../../src/components/Profile.svelte","../../src/components/EventLog.svelte","../../src/components/Animation.svelte","../../src/App.svelte","../../node_modules/svelte/src/runtime/internal/spread.js","../../src/data.js","../../src/main.js"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { noop } from './utils.js';\n\nexport const is_client = typeof window !== 'undefined';\n\n/** @type {() => number} */\nexport let now = is_client ? () => window.performance.now() : () => Date.now();\n\nexport let raf = is_client ? (cb) => requestAnimationFrame(cb) : noop;\n\n// used internally for testing\n/** @returns {void} */\nexport function set_now(fn) {\n\tnow = fn;\n}\n\n/** @returns {void} */\nexport function set_raf(fn) {\n\traf = fn;\n}\n","import { raf } from './environment.js';\n\nconst tasks = new Set();\n\n/**\n * @param {number} now\n * @returns {void}\n */\nfunction run_tasks(now) {\n\ttasks.forEach((task) => {\n\t\tif (!task.c(now)) {\n\t\t\ttasks.delete(task);\n\t\t\ttask.f();\n\t\t}\n\t});\n\tif (tasks.size !== 0) raf(run_tasks);\n}\n\n/**\n * For testing purposes only!\n * @returns {void}\n */\nexport function clear_loops() {\n\ttasks.clear();\n}\n\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n * @param {import('./private.js').TaskCallback} callback\n * @returns {import('./private.js').Task}\n */\nexport function loop(callback) {\n\t/** @type {import('./private.js').TaskEntry} */\n\tlet task;\n\tif (tasks.size === 0) raf(run_tasks);\n\treturn {\n\t\tpromise: new Promise((fulfill) => {\n\t\t\ttasks.add((task = { c: callback, f: fulfill }));\n\t\t}),\n\t\tabort() {\n\t\t\ttasks.delete(task);\n\t\t}\n\t};\n}\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { append_empty_stylesheet, detach, get_root_for_style } from './dom.js';\nimport { raf } from './environment.js';\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\n/** @type {Map<Document | ShadowRoot, import('./private.d.ts').StyleInformation>} */\nconst managed_styles = new Map();\n\nlet active = 0;\n\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\n/**\n * @param {string} str\n * @returns {number}\n */\nfunction hash(str) {\n\tlet hash = 5381;\n\tlet i = str.length;\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn hash >>> 0;\n}\n\n/**\n * @param {Document | ShadowRoot} doc\n * @param {Element & ElementCSSInlineStyle} node\n * @returns {{ stylesheet: any; rules: {}; }}\n */\nfunction create_style_information(doc, node) {\n\tconst info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n\tmanaged_styles.set(doc, info);\n\treturn info;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {number} a\n * @param {number} b\n * @param {number} duration\n * @param {number} delay\n * @param {(t: number) => number} ease\n * @param {(t: number, u: number) => string} fn\n * @param {number} uid\n * @returns {string}\n */\nexport function create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n\tconst step = 16.666 / duration;\n\tlet keyframes = '{\\n';\n\tfor (let p = 0; p <= 1; p += step) {\n\t\tconst t = a + (b - a) * ease(p);\n\t\tkeyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n\t}\n\tconst rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n\tconst name = `__svelte_${hash(rule)}_${uid}`;\n\tconst doc = get_root_for_style(node);\n\tconst { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n\tif (!rules[name]) {\n\t\trules[name] = true;\n\t\tstylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n\t}\n\tconst animation = node.style.animation || '';\n\tnode.style.animation = `${\n\t\tanimation ? `${animation}, ` : ''\n\t}${name} ${duration}ms linear ${delay}ms 1 both`;\n\tactive += 1;\n\treturn name;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {string} [name]\n * @returns {void}\n */\nexport function delete_rule(node, name) {\n\tconst previous = (node.style.animation || '').split(', ');\n\tconst next = previous.filter(\n\t\tname\n\t\t\t? (anim) => anim.indexOf(name) < 0 // remove specific animation\n\t\t\t: (anim) => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n\t);\n\tconst deleted = previous.length - next.length;\n\tif (deleted) {\n\t\tnode.style.animation = next.join(', ');\n\t\tactive -= deleted;\n\t\tif (!active) clear_rules();\n\t}\n}\n\n/** @returns {void} */\nexport function clear_rules() {\n\traf(() => {\n\t\tif (active) return;\n\t\tmanaged_styles.forEach((info) => {\n\t\t\tconst { ownerNode } = info.stylesheet;\n\t\t\t// there is no ownerNode if it runs on jsdom.\n\t\t\tif (ownerNode) detach(ownerNode);\n\t\t});\n\t\tmanaged_styles.clear();\n\t});\n}\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.18';\nexport const PUBLIC_VERSION = '4';\n","import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n","import { readable, writable, derived } from 'svelte/store'\n\nexport const time = readable(new Date(), (set) => {\n  const interval = setInterval(() => {\n    set(new Date())\n  }, 1000)\n\n  return () => {\n    clearInterval(interval)\n  }\n})\n\nlet start = new Date()\n\nexport const userActivity = () => {\n  start = new Date()\n}\n\nexport const elapsed = derived(time, ($time) =>\n  Math.round(($time - start) / 1000)\n)\n\n// simple counter\nexport const count = writable(0)\n","<script>\n  export let message = ''\n  export let itemId = ''\n</script>\n\n<h1>\n  {message}\n  {#if itemId}\n    <small>{itemId}</small>\n  {/if}\n</h1>\n\n<style>\n  h1 {\n    font-size: 24pt;\n  }\n  h1 > small {\n    font-size: 12pt;\n    color: #bbb;\n  }\n</style>\n","<script>\n  import { createEventDispatcher } from 'svelte'\n\n  export let item = { id: 0, name: '', url: '' }\n  export let currentItem = 0\n\n  const dispatch = createEventDispatcher()\n\n  const select = () => dispatch('select', { item: item })\n  const edit = () => dispatch('edit', { item: item })\n</script>\n\n<li class:active={currentItem === item.id}>\n  <div style=\"float:right;\">\n    <buttton\n      on:keydown={edit(item)}\n      on:click={edit(item)}\n      role=\"button\"\n      tabindex=\"0\">Edit</buttton\n    >\n  </div>\n  <div\n    on:keydown={select(item)}\n    on:click={select(item)}\n    role=\"button\"\n    tabindex=\"0\"\n  >\n    {item.name} -\n    <small>{item.url}</small>\n  </div>\n</li>\n\n<style>\n  li {\n    border: 1px solid #ddd;\n    border-radius: 3px 3px 3px 3px;\n    margin-bottom: 3px;\n    padding: 9px;\n    font-size: 12pt;\n    cursor: pointer;\n  }\n  .active {\n    background-color: #bbb;\n  }\n  li:hover {\n    border: 1px solid #aaa;\n  }\n</style>\n","<script>\n  import { createEventDispatcher } from 'svelte'\n  import ListItem from './ListItem.svelte'\n\n  export let list = []\n  export let currentItem = 0\n\n  const dispatch = createEventDispatcher()\n\n  const select = (event) => {\n    currentItem = event.detail.item.id\n    dispatch('select', event.detail)\n  }\n</script>\n\n<div class=\"list-container\">\n  <ul>\n    {#each list as item}\n      <ListItem {currentItem} {item} on:select={select} on:edit />\n    {/each}\n  </ul>\n</div>\n\n<style>\n  ul {\n    list-style: none;\n    margin: 0px;\n    padding: 0px;\n  }\n</style>\n","<script>\n  import { createEventDispatcher } from 'svelte'\n\n  export let data = {\n    header: [],\n    entries: [],\n  }\n  export let selected = ''\n\n  const dispatch = createEventDispatcher()\n\n  const handleClick = (entry) => dispatch('clickedRow', entry)\n\n  const tblHeadClick = (e) => {\n    if (e.target.tagName != 'TH') return\n    let th = e.target\n    sortTable(th.cellIndex, th.dataset.type, th.dataset.order)\n    if (th.dataset.order === 'asc') {\n      th.dataset.order = 'desc'\n    } else {\n      th.dataset.order = 'asc'\n    }\n  }\n\n  const sortTable = (colNum, type, order) => {\n    let tbody = document.querySelector('tbody')\n    let rowsArray = Array.from(tbody.rows)\n    let compare\n    switch (type) {\n      case 'date':\n        compare = (rowA, rowB) => {\n          const dateA = Date.parse(rowA.cells[colNum].innerHTML)\n          const dateB = Date.parse(rowB.cells[colNum].innerHTML)\n          return rowA.cells[colNum].innerHTML - rowB.cells[colNum].innerHTML\n        }\n        break\n      case 'number':\n        compare = (rowA, rowB) => {\n          return rowA.cells[colNum].innerHTML - rowB.cells[colNum].innerHTML\n        }\n        break\n      case 'string':\n        compare = (rowA, rowB) => {\n          return rowA.cells[colNum].innerHTML > rowB.cells[colNum].innerHTML\n            ? 1\n            : -1\n        }\n        break\n    }\n    rowsArray.sort(compare)\n    if (order === 'desc') {\n      rowsArray.reverse()\n    }\n    tbody.append(...rowsArray)\n  }\n</script>\n\n<table class=\"tbl\">\n  <thead>\n    <tr>\n      {#each data.header as header}\n        <th data-type={header.type} data-order=\"asc\" on:click={tblHeadClick}\n          >{header.value}</th\n        >\n      {/each}\n    </tr>\n  </thead>\n  <tbody>\n    {#each data.entries as entry}\n      <tr class:active={selected === entry.name} on:click={handleClick(entry)}>\n        <td>{entry.id}</td>\n        <td>{entry.name}</td>\n        <td>{entry.url}</td>\n      </tr>\n    {/each}\n  </tbody>\n</table>\n\n<style>\n  .tbl {\n    border-collapse: collapse;\n    border-spacing: 0;\n    border-radius: 3px;\n    margin-bottom: 5px;\n    width: 100%;\n  }\n\n  tr:hover td {\n    background: #ddd;\n    cursor: pointer;\n  }\n\n  th {\n    background: #999;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n  }\n\n  th,\n  td {\n    padding: 10px;\n    text-align: left;\n  }\n\n  tr.active td {\n    color: green;\n  }\n\n  tr:first-child {\n    border-top: 1px solid #bbb;\n  }\n\n  tr:last-child {\n    border-bottom: 1px solid #bbb;\n  }\n\n  th:first-child {\n    border-left: 1px solid #bbb;\n  }\n\n  th:last-child {\n    border-right: 1px solid #bbb;\n  }\n\n  tbody tr:nth-child(odd) {\n    background: #eee;\n  }\n\n  td:first-child {\n    border-left: 1px solid #bbb;\n  }\n\n  td:last-child {\n    border-right: 1px solid #bbb;\n  }\n</style>\n","<script>\n  export let send = false\n  export let id = 'btn'\n</script>\n\n<button {id} class:sendBtn={send === true} on:click>\n  <slot>Button</slot>\n</button>\n\n<style>\n  button {\n    font-size: 0.9em;\n    margin-top: 0.3em;\n    padding: 0.5em 0.8em;\n    color: black;\n    background: white;\n    border-radius: 0.3em;\n    box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);\n  }\n  .sendBtn {\n    background: blue;\n    color: white;\n  }\n</style>\n","/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nexport { identity as linear } from '../internal/index.js';\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backInOut(t) {\n\tconst s = 1.70158 * 1.525;\n\tif ((t *= 2) < 1) return 0.5 * (t * t * ((s + 1) * t - s));\n\treturn 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backIn(t) {\n\tconst s = 1.70158;\n\treturn t * t * ((s + 1) * t - s);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function backOut(t) {\n\tconst s = 1.70158;\n\treturn --t * t * ((s + 1) * t + s) + 1;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceOut(t) {\n\tconst a = 4.0 / 11.0;\n\tconst b = 8.0 / 11.0;\n\tconst c = 9.0 / 10.0;\n\tconst ca = 4356.0 / 361.0;\n\tconst cb = 35442.0 / 1805.0;\n\tconst cc = 16061.0 / 1805.0;\n\tconst t2 = t * t;\n\treturn t < a\n\t\t? 7.5625 * t2\n\t\t: t < b\n\t\t? 9.075 * t2 - 9.9 * t + 3.4\n\t\t: t < c\n\t\t? ca * t2 - cb * t + cc\n\t\t: 10.8 * t * t - 20.52 * t + 10.72;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceInOut(t) {\n\treturn t < 0.5 ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0)) : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function bounceIn(t) {\n\treturn 1.0 - bounceOut(1.0 - t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circInOut(t) {\n\tif ((t *= 2) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1);\n\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circIn(t) {\n\treturn 1.0 - Math.sqrt(1.0 - t * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function circOut(t) {\n\treturn Math.sqrt(1 - --t * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicInOut(t) {\n\treturn t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicIn(t) {\n\treturn t * t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function cubicOut(t) {\n\tconst f = t - 1.0;\n\treturn f * f * f + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticInOut(t) {\n\treturn t < 0.5\n\t\t? 0.5 * Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) * Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n\t\t: 0.5 *\n\t\t\t\tMath.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n\t\t\t\tMath.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n\t\t\t\t1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticIn(t) {\n\treturn Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function elasticOut(t) {\n\treturn Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoInOut(t) {\n\treturn t === 0.0 || t === 1.0\n\t\t? t\n\t\t: t < 0.5\n\t\t? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n\t\t: -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoIn(t) {\n\treturn t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function expoOut(t) {\n\treturn t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadInOut(t) {\n\tt /= 0.5;\n\tif (t < 1) return 0.5 * t * t;\n\tt--;\n\treturn -0.5 * (t * (t - 2) - 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadIn(t) {\n\treturn t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quadOut(t) {\n\treturn -t * (t - 2.0);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartInOut(t) {\n\treturn t < 0.5 ? +8.0 * Math.pow(t, 4.0) : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartIn(t) {\n\treturn Math.pow(t, 4.0);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quartOut(t) {\n\treturn Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintInOut(t) {\n\tif ((t *= 2) < 1) return 0.5 * t * t * t * t * t;\n\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintIn(t) {\n\treturn t * t * t * t * t;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function quintOut(t) {\n\treturn --t * t * t * t * t + 1;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineInOut(t) {\n\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineIn(t) {\n\tconst v = Math.cos(t * Math.PI * 0.5);\n\tif (Math.abs(v) < 1e-14) return 1;\n\telse return 1 - v;\n}\n\n/**\n * https://svelte.dev/docs/svelte-easing\n * @param {number} t\n * @returns {number}\n */\nexport function sineOut(t) {\n\treturn Math.sin((t * Math.PI) / 2);\n}\n","import { cubicOut, cubicInOut, linear } from '../easing/index.js';\nimport { assign, split_css_unit, is_function } from '../internal/index.js';\n\n/**\n * Animates a `blur` filter alongside an element's opacity.\n *\n * https://svelte.dev/docs/svelte-transition#blur\n * @param {Element} node\n * @param {import('./public').BlurParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function blur(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst f = style.filter === 'none' ? '' : style.filter;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [value, unit] = split_css_unit(amount);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `opacity: ${target_opacity - od * u}; filter: ${f} blur(${u * value}${unit});`\n\t};\n}\n\n/**\n * Animates the opacity of an element from 0 to the current opacity for `in` transitions and from the current opacity to 0 for `out` transitions.\n *\n * https://svelte.dev/docs/svelte-transition#fade\n * @param {Element} node\n * @param {import('./public').FadeParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n\tconst o = +getComputedStyle(node).opacity;\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) => `opacity: ${t * o}`\n\t};\n}\n\n/**\n * Animates the x and y positions and the opacity of an element. `in` transitions animate from the provided values, passed as parameters to the element's default values. `out` transitions animate from the element's default values to the provided values.\n *\n * https://svelte.dev/docs/svelte-transition#fly\n * @param {Element} node\n * @param {import('./public').FlyParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function fly(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [xValue, xUnit] = split_css_unit(x);\n\tconst [yValue, yUnit] = split_css_unit(y);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * xValue}${xUnit}, ${(1 - t) * yValue}${yUnit});\n\t\t\topacity: ${target_opacity - od * u}`\n\t};\n}\n\n/**\n * Slides an element in and out.\n *\n * https://svelte.dev/docs/svelte-transition#slide\n * @param {Element} node\n * @param {import('./public').SlideParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function slide(node, { delay = 0, duration = 400, easing = cubicOut, axis = 'y' } = {}) {\n\tconst style = getComputedStyle(node);\n\tconst opacity = +style.opacity;\n\tconst primary_property = axis === 'y' ? 'height' : 'width';\n\tconst primary_property_value = parseFloat(style[primary_property]);\n\tconst secondary_properties = axis === 'y' ? ['top', 'bottom'] : ['left', 'right'];\n\tconst capitalized_secondary_properties = secondary_properties.map(\n\t\t(e) => `${e[0].toUpperCase()}${e.slice(1)}`\n\t);\n\tconst padding_start_value = parseFloat(style[`padding${capitalized_secondary_properties[0]}`]);\n\tconst padding_end_value = parseFloat(style[`padding${capitalized_secondary_properties[1]}`]);\n\tconst margin_start_value = parseFloat(style[`margin${capitalized_secondary_properties[0]}`]);\n\tconst margin_end_value = parseFloat(style[`margin${capitalized_secondary_properties[1]}`]);\n\tconst border_width_start_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[0]}Width`]\n\t);\n\tconst border_width_end_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[1]}Width`]\n\t);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) =>\n\t\t\t'overflow: hidden;' +\n\t\t\t`opacity: ${Math.min(t * 20, 1) * opacity};` +\n\t\t\t`${primary_property}: ${t * primary_property_value}px;` +\n\t\t\t`padding-${secondary_properties[0]}: ${t * padding_start_value}px;` +\n\t\t\t`padding-${secondary_properties[1]}: ${t * padding_end_value}px;` +\n\t\t\t`margin-${secondary_properties[0]}: ${t * margin_start_value}px;` +\n\t\t\t`margin-${secondary_properties[1]}: ${t * margin_end_value}px;` +\n\t\t\t`border-${secondary_properties[0]}-width: ${t * border_width_start_value}px;` +\n\t\t\t`border-${secondary_properties[1]}-width: ${t * border_width_end_value}px;`\n\t};\n}\n\n/**\n * Animates the opacity and scale of an element. `in` transitions animate from an element's current (default) values to the provided values, passed as parameters. `out` transitions animate from the provided values to an element's default values.\n *\n * https://svelte.dev/docs/svelte-transition#scale\n * @param {Element} node\n * @param {import('./public').ScaleParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function scale(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst sd = 1 - start;\n\tconst od = target_opacity * (1 - opacity);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - sd * u});\n\t\t\topacity: ${target_opacity - od * u}\n\t\t`\n\t};\n}\n\n/**\n * Animates the stroke of an SVG element, like a snake in a tube. `in` transitions begin with the path invisible and draw the path to the screen over time. `out` transitions start in a visible state and gradually erase the path. `draw` only works with elements that have a `getTotalLength` method, like `<path>` and `<polyline>`.\n *\n * https://svelte.dev/docs/svelte-transition#draw\n * @param {SVGElement & { getTotalLength(): number }} node\n * @param {import('./public').DrawParams} [params]\n * @returns {import('./public').TransitionConfig}\n */\nexport function draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n\tlet len = node.getTotalLength();\n\tconst style = getComputedStyle(node);\n\tif (style.strokeLinecap !== 'butt') {\n\t\tlen += parseInt(style.strokeWidth);\n\t}\n\tif (duration === undefined) {\n\t\tif (speed === undefined) {\n\t\t\tduration = 800;\n\t\t} else {\n\t\t\tduration = len / speed;\n\t\t}\n\t} else if (typeof duration === 'function') {\n\t\tduration = duration(len);\n\t}\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_, u) => `\n\t\t\tstroke-dasharray: ${len};\n\t\t\tstroke-dashoffset: ${u * len};\n\t\t`\n\t};\n}\n\n/**\n * The `crossfade` function creates a pair of [transitions](https://svelte.dev/docs#template-syntax-element-directives-transition-fn) called `send` and `receive`. When an element is 'sent', it looks for a corresponding element being 'received', and generates a transition that transforms the element to its counterpart's position and fades it out. When an element is 'received', the reverse happens. If there is no counterpart, the `fallback` transition is used.\n *\n * https://svelte.dev/docs/svelte-transition#crossfade\n * @param {import('./public').CrossfadeParams & {\n * \tfallback?: (node: Element, params: import('./public').CrossfadeParams, intro: boolean) => import('./public').TransitionConfig;\n * }} params\n * @returns {[(node: any, params: import('./public').CrossfadeParams & { key: any; }) => () => import('./public').TransitionConfig, (node: any, params: import('./public').CrossfadeParams & { key: any; }) => () => import('./public').TransitionConfig]}\n */\nexport function crossfade({ fallback, ...defaults }) {\n\t/** @type {Map<any, Element>} */\n\tconst to_receive = new Map();\n\t/** @type {Map<any, Element>} */\n\tconst to_send = new Map();\n\t/**\n\t * @param {Element} from_node\n\t * @param {Element} node\n\t * @param {import('./public').CrossfadeParams} params\n\t * @returns {import('./public').TransitionConfig}\n\t */\n\tfunction crossfade(from_node, node, params) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = (d) => Math.sqrt(d) * 30,\n\t\t\teasing = cubicOut\n\t\t} = assign(assign({}, defaults), params);\n\t\tconst from = from_node.getBoundingClientRect();\n\t\tconst to = node.getBoundingClientRect();\n\t\tconst dx = from.left - to.left;\n\t\tconst dy = from.top - to.top;\n\t\tconst dw = from.width / to.width;\n\t\tconst dh = from.height / to.height;\n\t\tconst d = Math.sqrt(dx * dx + dy * dy);\n\t\tconst style = getComputedStyle(node);\n\t\tconst transform = style.transform === 'none' ? '' : style.transform;\n\t\tconst opacity = +style.opacity;\n\t\treturn {\n\t\t\tdelay,\n\t\t\tduration: is_function(duration) ? duration(d) : duration,\n\t\t\teasing,\n\t\t\tcss: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${\n\t\t\t\tt + (1 - t) * dh\n\t\t\t});\n\t\t\t`\n\t\t};\n\t}\n\n\t/**\n\t * @param {Map<any, Element>} items\n\t * @param {Map<any, Element>} counterparts\n\t * @param {boolean} intro\n\t * @returns {(node: any, params: import('./public').CrossfadeParams & { key: any; }) => () => import('./public').TransitionConfig}\n\t */\n\tfunction transition(items, counterparts, intro) {\n\t\treturn (node, params) => {\n\t\t\titems.set(params.key, node);\n\t\t\treturn () => {\n\t\t\t\tif (counterparts.has(params.key)) {\n\t\t\t\t\tconst other_node = counterparts.get(params.key);\n\t\t\t\t\tcounterparts.delete(params.key);\n\t\t\t\t\treturn crossfade(other_node, node, params);\n\t\t\t\t}\n\t\t\t\t// if the node is disappearing altogether\n\t\t\t\t// (i.e. wasn't claimed by the other list)\n\t\t\t\t// then we need to supply an outro\n\t\t\t\titems.delete(params.key);\n\t\t\t\treturn fallback && fallback(node, params, intro);\n\t\t\t};\n\t\t};\n\t}\n\treturn [transition(to_send, to_receive, false), transition(to_receive, to_send, true)];\n}\n","<script>\n  import Button from './Button.svelte'\n  import { fly } from 'svelte/transition'\n  import { quintOut } from 'svelte/easing'\n  import { createEventDispatcher, onDestroy } from 'svelte'\n\n  export let modalForm = false\n  export let modalId = 'modal'\n\n  const dispatch = createEventDispatcher()\n\n  const send = () => dispatch('sendForm')\n  const close = () => dispatch('close')\n\n  let modal\n\n  const handleKeydown = (e) => {\n    if (e.key === 'Escape') {\n      close()\n      return\n    }\n    if (e.key === 'Tab') {\n      const nodes = modal.querySelectorAll('*')\n      const tabbable = Array.from(nodes).filter((n) => n.tabIndex >= 0)\n      let index = tabbable.indexOf(document.activeElement)\n      if (index === -1 && e.shiftKey) index = 0\n      index += tabbable.length + (e.shiftKey ? -1 : 1)\n      index %= tabbable.length\n      tabbable[index].focus()\n      e.preventDefault()\n    }\n  }\n\n  const previously_focused =\n    typeof document !== 'undefined' && document.activeElement\n\n  if (previously_focused) {\n    onDestroy(() => {\n      previously_focused.focus()\n    })\n  }\n</script>\n\n<svelte:window on:keydown={handleKeydown} />\n\n<div\n  class=\"modal-background\"\n  on:keydown={close}\n  on:click={close}\n  role=\"button\"\n  tabindex=\"0\"\n/>\n\n<div\n  id={modalId}\n  class=\"modal\"\n  role=\"dialog\"\n  aria-modal=\"true\"\n  bind:this={modal}\n  transition:fly={{\n    delay: 0,\n    duration: 1000,\n    y: -500,\n    opacity: 0.2,\n    easing: quintOut,\n  }}\n>\n  <slot name=\"header\" />\n  <slot />\n  <!-- svelte-ignore a11y-autofocus -->\n  {#if modalForm}\n    <Button send on:click={send}>Send</Button>\n  {/if}\n  <Button id=\"modalCloseBtn\" on:click={close}>Close</Button>\n</div>\n\n<style>\n  .modal-background {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.3);\n  }\n  .modal {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    width: calc(100vw - 4em);\n    max-width: 32em;\n    max-height: calc(100vh - 4em);\n    overflow: auto;\n    transform: translate(-50%, -50%);\n    padding: 1em;\n    border-radius: 0.2em;\n    background: white;\n    text-align: center;\n  }\n</style>\n","<script>\n  import Modal from './Modal.svelte'\n  import Button from './Button.svelte'\n  import { createEventDispatcher } from 'svelte'\n\n  export let showModal = false\n  export let headline = 'Modal'\n  export let body = ''\n  export let btnText = 'Modal Dialog'\n\n  const dispatch = createEventDispatcher()\n\n  const open = () => {\n    showModal = true\n  }\n\n  const close = () => {\n    dispatch('close', {})\n    showModal = false\n  }\n</script>\n\n<Button id=\"modalDialogBtn\" on:click={open}>{btnText}</Button>\n\n{#if showModal}\n  <Modal modalId=\"modalDialog\" on:close={close}>\n    <h2 slot=\"header\">{headline}</h2>\n    <p>\n      {@html body}\n    </p>\n  </Modal>\n{/if}\n","<script>\n  import { createEventDispatcher, onDestroy } from 'svelte'\n  import Modal from './Modal.svelte'\n\n  export let showModal = false\n  export let modalForm = true\n  export let headline = 'Modal'\n  export let valueName = ''\n  export let valueUrl = ''\n  export let placeholderName = 'Name'\n  export let placeholderUrl = 'URL'\n\n  const dispatch = createEventDispatcher()\n\n  const sendForm = () => {\n    dispatch('sendForm', { name: valueName, url: valueUrl })\n    showModal = false\n  }\n\n  const close = () => {\n    dispatch('close', {})\n    showModal = false\n  }\n</script>\n\n{#if showModal}\n  <Modal\n    modalId=\"modalForm\"\n    {modalForm}\n    on:close={close}\n    on:sendForm={sendForm}\n  >\n    <h2 slot=\"header\">{headline}</h2>\n    <div>\n      <input type=\"text\" bind:value={valueName} placeholder={placeholderName} />\n    </div>\n    <div>\n      <input type=\"text\" bind:value={valueUrl} placeholder={placeholderUrl} />\n    </div>\n  </Modal>\n{/if}\n\n<style>\n  input[type='text'] {\n    width: 90%;\n  }\n</style>\n","<script>\n  import { createEventDispatcher } from 'svelte'\n\n  export let userInput = ''\n\n  const dispatch = createEventDispatcher()\n\n  const keypress = () => {\n    dispatch('input', { input: userInput })\n  }\n</script>\n\n<div class=\"user-input\">\n  Two-way binding\n  <input type=\"text\" bind:value={userInput} on:keyup={keypress} />\n  <span>{userInput}</span>\n</div>\n\n<style>\n  input[type='text'] {\n    border-radius: 3px 3px 3px 3px;\n    margin-left: 5px;\n    margin-right: 20px;\n    font-size: 12pt;\n  }\n  .user-input {\n    margin-top: 10px;\n    font-size: 12pt;\n  }\n</style>\n","<script>\n  import { createEventDispatcher } from 'svelte'\n\n  export let selections = []\n\n  const dispatch = createEventDispatcher()\n  let current = ''\n  let information = '<p>Nothing to display.</p>'\n\n  const setSelection = (selector) => {\n    current = selector\n    const item = selections.find((o) => o.selector === selector)\n    information = item.text\n    dispatch('select', { current })\n  }\n</script>\n\n<div class=\"selection-container\">\n  <div>\n    <fieldset>\n      {#each selections as { selector, label }, i}\n        <span\n          on:keydown={setSelection(selector)}\n          on:click={setSelection(selector)}\n          role=\"button\"\n          tabindex=\"0\"\n        >\n          <label class:active={current === selector}>\n            {label}\n            <input\n              type=\"radio\"\n              name=\"selection\"\n              id={selector}\n              title={selector}\n              value={selector}\n            />\n          </label>\n        </span>\n      {/each}\n    </fieldset>\n  </div>\n  <div>\n    The user selected {current ? current : 'nothing'}.\n    {@html information}\n  </div>\n</div>\n\n<style>\n  .selection-container {\n    display: flex;\n    padding: 3px;\n    border-radius: 0 0 5px 0;\n    box-shadow: 2px 2px 3px #eee;\n  }\n  .selection-container > div:not(:first-child) {\n    margin-left: 5px;\n    margin-top: 5px;\n  }\n  fieldset {\n    border: 1px solid #eee;\n    border-radius: 5px 5px 5px 5px;\n  }\n  .active {\n    color: #00f;\n  }\n</style>\n","<script>\n  import { createEventDispatcher } from 'svelte'\n\n  export let content = ''\n\n  const dispatch = createEventDispatcher()\n\n  const keypress = () => dispatch('input', { input: content })\n</script>\n\n<div\n  class=\"contentBox\"\n  contenteditable=\"true\"\n  bind:textContent={content}\n  on:keyup={keypress}\n  role=\"button\"\n  tabindex=\"0\"\n/>\n\n<style>\n  .contentBox {\n    margin: 7px 0px 7px 0px;\n    padding: 5px;\n    border-radius: 5px 5px 5px 5px;\n    box-shadow: 2px 2px 3px #eee;\n  }\n</style>\n","<script>\n  import { onMount } from 'svelte'\n  import { fade } from 'svelte/transition'\n\n  let name\n  let email\n  let nameOrg\n  let emailOrg\n  let thumbnail\n  let visible = false\n  const maxlength = 27\n\n  const shortenString = (str, maxlength) => {\n    return str.length > maxlength\n      ? str.substring(0, maxlength - 3) + '...'\n      : str\n  }\n\n  async function loadData() {\n    let userData = await fetch(`https://randomuser.me/api/`).then((r) =>\n      r.json()\n    )\n    nameOrg = `${userData.results[0].name.title} ${userData.results[0].name.first} ${userData.results[0].name.last}`\n    emailOrg = userData.results[0].email\n    name = shortenString(nameOrg, maxlength)\n    email = shortenString(emailOrg, maxlength)\n    thumbnail = userData.results[0].picture.medium\n    visible = true\n  }\n\n  onMount(loadData)\n</script>\n\n{#if visible}\n  <div class=\"columns\" transition:fade={{ delay: 250, duration: 300 }}>\n    <div>\n      <img src={thumbnail} alt=\"\" />\n    </div>\n    <div>\n      <div title={nameOrg}>{name}</div>\n      <div title={emailOrg}>{email}</div>\n    </div>\n  </div>\n{/if}\n\n<style>\n  .columns {\n    display: flex;\n    padding: 5px;\n    margin-top: 5px;\n    border: 1px solid #eee;\n    border-radius: 5px 5px 5px 5px;\n  }\n  .columns div div {\n    margin-top: 5px;\n    margin-left: 7px;\n  }\n  img {\n    margin-top: 2px;\n    margin-left: 2px;\n    border: 1px solid #bbb;\n    box-shadow: 2px 2px 3px #eee;\n  }\n</style>\n","<svelte:options accessors={true} />\n\n<script>\n  export let showLogs = false\n  export let logs = ''\n</script>\n\n{#if showLogs}\n  <textarea id=\"eventLog\">{logs}</textarea>\n{/if}\n\n<style>\n  textarea {\n    background-color: black;\n    color: lightgray;\n    font-size: 0.7em;\n    width: 100%;\n    height: 100px;\n    padding-bottom: 20px;\n    overflow-y: scroll;\n  }\n</style>\n","<script>\n  import { fade, blur, fly, slide, scale } from 'svelte/transition'\n\n  let animate = false\n</script>\n\n<div class=\"animation-container\">\n  <input type=\"checkbox\" bind:checked={animate} /> Show Transitions\n  {#if animate}\n    <div transition:fade>This text use transition:fade.</div>\n    <div transition:blur>This text use transition:blur.</div>\n    <div transition:fly={{ x: 10 }}>This text use transition:fly.</div>\n    <div transition:slide>This text use transition:slide.</div>\n    <div transition:scale={{ start: 5 }}>This text use transition:scale.</div>\n  {/if}\n</div>\n\n<style>\n  .animation-container {\n    margin: 10px;\n  }\n</style>\n","<svelte:options accessors={true} />\n\n<script>\n  import { elapsed } from './stores.js'\n  import { createEventDispatcher } from 'svelte'\n\n  import Headline from './components/Headline.svelte'\n  import List from './components/List.svelte'\n  import Table from './components/Table.svelte'\n  import ModalDialog from './components/ModalDialog.svelte'\n  import ModalForm from './components/ModalForm.svelte'\n  import UserInput from './components/UserInput.svelte'\n  import RadioBoxes from './components/RadioBoxes.svelte'\n  import Contenteditable from './components/Contenteditable.svelte'\n  import Profile from './components/Profile.svelte'\n  import EventLog from './components/EventLog.svelte'\n  import Animation from './components/Animation.svelte'\n\n  export let message, itemId\n  export let list, currentItem\n  export let table\n  export let userInput\n  export let selections\n  export let modalDialog\n  export let showFormModal,\n    valueName = '',\n    valueUrl = ''\n  export let selected = ''\n  export let showLogs = true,\n    logs = ''\n\n  // event handling\n  const dispatch = createEventDispatcher()\n  const listSelection = (event) => dispatch('listSelection', event.detail.item)\n  const handleClickedRow = (event) => dispatch('handleClickedRow', event.detail)\n  const sendForm = (event) => dispatch('sendForm', event.detail)\n  const handleEvent = (event) => dispatch('handleEvent', event.detail)\n  const handleUserEvent = (event) => dispatch('handleUserEvent', event.detail)\n</script>\n\n<div id=\"container\">\n  <div>\n    <Headline {message} {itemId} />\n  </div>\n  <div class=\"columns\">\n    <div class=\"left-column\">\n      <List {list} {currentItem} on:select={listSelection} on:edit />\n\n      <UserInput {userInput} on:input />\n\n      <Contenteditable content=\"This content is editable.\" on:input />\n\n      <ModalDialog {...modalDialog} on:close />\n\n      <Animation />\n\n      <ModalForm\n        showModal={showFormModal}\n        {valueName}\n        {valueUrl}\n        on:sendForm={sendForm}\n        on:close\n      />\n    </div>\n    <div class=\"right-column\">\n      <Table {selected} data={table} on:clickedRow={handleClickedRow} />\n\n      <RadioBoxes {selections} on:select={handleEvent} />\n\n      <Profile />\n    </div>\n  </div>\n  <div class=\"footer\">\n    <div>\n      {#if $elapsed}\n        The user is inactive for {$elapsed}\n        {$elapsed === 1 ? 'second' : 'seconds'}\n      {:else}\n        The user is active\n      {/if}\n    </div>\n  </div>\n  <EventLog {showLogs} {logs} />\n</div>\n\n<svelte:window\n  on:mousemove={handleUserEvent}\n  on:click={handleUserEvent}\n  on:keydown={handleUserEvent}\n/>\n\n<style>\n  #container {\n    height: 90%;\n    width: 75%;\n    padding: 2% 2% 3% 3%;\n    margin: 0 auto;\n    border: 1px solid #eee;\n    border-radius: 5px 5px 5px 5px;\n  }\n  .columns {\n    display: flex;\n    flex-wrap: wrap;\n    padding: 3px;\n  }\n  .columns > * {\n    flex-grow: 1;\n    flex-shrink: 1;\n    flex-basis: 300px;\n  }\n  .columns .left-column {\n    padding: 1% 1% 2% 2%;\n  }\n  .columns .right-column {\n    padding: 1% 1% 2% 2%;\n  }\n  .footer {\n    margin: 7px;\n    font-size: 10px;\n  }\n</style>\n","/** @returns {{}} */\nexport function get_spread_update(levels, updates) {\n\tconst update = {};\n\tconst to_null_out = {};\n\tconst accounted_for = { $$scope: 1 };\n\tlet i = levels.length;\n\twhile (i--) {\n\t\tconst o = levels[i];\n\t\tconst n = updates[i];\n\t\tif (n) {\n\t\t\tfor (const key in o) {\n\t\t\t\tif (!(key in n)) to_null_out[key] = 1;\n\t\t\t}\n\t\t\tfor (const key in n) {\n\t\t\t\tif (!accounted_for[key]) {\n\t\t\t\t\tupdate[key] = n[key];\n\t\t\t\t\taccounted_for[key] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlevels[i] = n;\n\t\t} else {\n\t\t\tfor (const key in o) {\n\t\t\t\taccounted_for[key] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor (const key in to_null_out) {\n\t\tif (!(key in update)) update[key] = undefined;\n\t}\n\treturn update;\n}\n\nexport function get_spread_object(spread_props) {\n\treturn typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n","export const appProps = {\n  message: 'Svelte-Starter',\n  itemId: '',\n  currentItem: 0,\n  userInput: '',\n  list: [\n    { id: 1, name: 'Svelte', url: 'https://svelte.technology/' },\n    { id: 2, name: 'Rollup', url: 'https://rollupjs.org/' },\n    { id: 3, name: 'Cypress', url: 'https://cypress.io/' },\n    { id: 4, name: 'Prettier', url: 'https://prettier.io/' },\n    { id: 5, name: 'Vitest', url: 'https://vitest.dev/' },\n  ],\n  table: {\n    header: [\n      { value: 'ID', type: 'number' },\n      { value: 'Name', type: 'string' },\n      { value: 'URL', type: 'string' },\n    ],\n    entries: [\n      { id: 1, name: 'Svelte', url: 'https://svelte.technology/' },\n      { id: 2, name: 'Rollup', url: 'https://rollupjs.org/' },\n      { id: 3, name: 'Cypress', url: 'https://cypress.io/' },\n      { id: 4, name: 'Prettier', url: 'https://prettier.io/' },\n      { id: 5, name: 'Vitest', url: 'https://vitest.dev/' },\n    ],\n  },\n  showFormModal: false,\n  modalDialog: {\n    showModal: false,\n    headline: 'Modal',\n    body: 'Modal body text.<br>Plus this.',\n  },\n  selections: [\n    {\n      selector: 'A',\n      label: 'A',\n      text: '<p>This is the selection <strong>A</strong>.<br>It shows the information for A.</p>',\n    },\n    {\n      selector: 'B',\n      label: 'B',\n      text: '<p>This is the selection <strong>B</strong>.<br>It shows the information for B.</p>',\n    },\n    {\n      selector: 'C',\n      label: 'C',\n      text: '<p>This is the selection <strong>C</strong>.<br>It shows the information for C.</p>',\n    },\n  ],\n}\n","import App from './App.svelte'\nimport { appProps } from './data.js'\nimport { userActivity } from './stores.js'\n\nconst app = new App({\n  target: document.body,\n  props: appProps,\n})\n\nconst logEvent = (event) => {\n  app.$set({\n    logs: app.logs\n      ? app.logs + '\\n' + JSON.stringify(event)\n      : JSON.stringify(event),\n  })\n  document.querySelector('#eventLog').scrollTop =\n    document.querySelector('#eventLog').scrollHeight\n}\n\napp.$on('listSelection', (event) => {\n  app.$set({\n    message: `Clicked item ${event.detail.name}`,\n    itemId: `Id: ${event.detail.id}`,\n    selected: event.detail.name,\n  })\n  logEvent(event.detail)\n})\n\napp.$on('handleClickedRow', (event) => {\n  app.$set({\n    message: `Clicked item ${event.detail.name}`,\n    itemId: `Id: ${event.detail.id}`,\n    selected: event.detail.name,\n    currentItem: event.detail.id,\n  })\n  logEvent(event.detail)\n})\n\napp.$on('edit', (event) => {\n  app.$set({\n    valueName: event.detail.item.name,\n    valueUrl: event.detail.item.url,\n    showFormModal: true,\n  })\n  logEvent(event.detail)\n})\n\napp.$on('close', (event) => {\n  app.$set({ showFormModal: false })\n  logEvent(event.detail)\n})\n\napp.$on('handleEvent', (event) => {\n  logEvent(event.detail)\n})\n\napp.$on('input', (event) => {\n  logEvent(event.detail)\n})\n\napp.$on('handleUserEvent', (event) => {\n  userActivity(event)\n})\n\napp.$on('sendForm', (event) => {\n  app.$set({ showFormModal: false })\n  logEvent(event.detail)\n})\n\nexport default app\n"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","src_url_equal","element_src","url","document","createElement","href","subscribe","store","callbacks","callback","undefined","unsub","unsubscribe","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","split_css_unit","value","split","match","parseFloat","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","append","target","node","appendChild","append_styles","style_sheet_id","styles","append_styles_to","get_root_for_style","getElementById","style","element","id","textContent","append_stylesheet","root","getRootNode","ownerDocument","host","append_empty_stylesheet","style_element","sheet","head","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","name","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","set_input_value","input","toggle_class","toggle","classList","custom_event","type","detail","bubbles","cancelable","CustomEvent","HtmlTag","is_svg","e","n","t","constructor","this","html","h","m","createElementNS","nodeType","nodeName","tagName","content","innerHTML","Array","from","childNodes","managed_styles","Map","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","rule","str","hash","charCodeAt","doc","stylesheet","rules","get","info","set","create_style_information","insertRule","cssRules","animation","delete_rule","previous","next","filter","anim","indexOf","deleted","join","ownerNode","clear","set_current_component","component","get_current_component","Error","createEventDispatcher","$$","call","defaultPrevented","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","promise","flushidx","flush","saved_component","update","pop","has","add","fragment","before_update","after_update","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_bidirectional_transition","params","intro","original_inert_value","config","running_program","pending_program","animation_name","clear_animation","init","program","abs","start","end","group","go","easing","linear","tick","css","inert","fulfill","loop","then","ensure_array_like","array_like_or_iterator","create_component","mount_component","new_on_destroy","on_mount","map","on_destroy","destroy_component","filtered","targets","flush_render_callbacks","make_dirty","fill","instance","create_fragment","not_equal","props","parent_component","bound","on_disconnect","context","skip_bound","ready","ret","rest","hydrate","nodes","children","l","SvelteComponent","$$set","$destroy","$on","index","splice","$set","obj","keys","__svelte","v","subscriber_queue","readable","writable","stop","subscribers","new_value","run_queue","subscriber","invalidate","time","interval","setInterval","clearInterval","elapsed","stores","initial_value","single","isArray","stores_array","every","Boolean","auto","started","values","pending","cleanup","sync","result","unsubscribers","derived","$time","round","small","create_if_block","h1","message","$$props","itemId","t2_value","t4_value","key","setProperty","li","div0","buttton","div1","apply","arguments","t2","t4","item","currentItem","div","ul","each_blocks","list","$$invalidate","t_value","th","th_data_type_value","t0_value","tr","td0","td1","td2","t0","each_value_1","header","each_value","entries","table","thead","tbody","selected","sortTable","colNum","order","compare","querySelector","rowsArray","rows","rowA","rowB","parse","cells","sort","reverse","entry","cellIndex","dataset","button","send","cubicInOut","pow","cubicOut","quintOut","blur","amount","opacity","getComputedStyle","target_opacity","od","unit","_t","u","fade","fly","y","transform","xValue","xUnit","yValue","yUnit","slide","axis","primary_property","primary_property_value","secondary_properties","capitalized_secondary_properties","toUpperCase","padding_start_value","padding_end_value","margin_start_value","margin_end_value","border_width_start_value","border_width_end_value","min","scale","sd","modalForm","modalId","close","modal","previously_focused","activeElement","focus","querySelectorAll","tabbable","tabIndex","shiftKey","preventDefault","$$value","h2","showModal","headline","body","btnText","input0","input1","valueName","valueUrl","placeholderName","placeholderUrl","span","userInput","label_1","div2","fieldset","selections","current","information","selector","find","img","img_src_value","div4","div3","div4_transition","email","nameOrg","emailOrg","thumbnail","visible","shortenString","maxlength","substring","userData","fetch","json","results","title","first","last","picture","medium","textarea","showLogs","logs","div2_transition","animate","checked","t3_value","t3","div6","div5","levels","updates","to_null_out","accounted_for","spread_props","modalDialog","showFormModal","app","label","logEvent","JSON","stringify","scrollTop","scrollHeight"],"mappings":"gCACO,SAASA,IAAS,CAElB,MAAMC,EAAYC,GAAMA,EASxB,SAASC,EAAOC,EAAKC,GAE3B,IAAK,MAAMC,KAAKD,EAAKD,EAAIE,GAAKD,EAAIC,GAClC,OAAA,CACD,CAuBO,SAASC,EAAIC,GACnB,OAAOA,GACR,CAEO,SAASC,IACf,OAAOC,OAAOC,OAAO,KACtB,CAMO,SAASC,EAAQC,GACvBA,EAAIC,QAAQP,EACb,CAMO,SAASQ,EAAYC,GAC3B,MAAwB,mBAAVA,CACf,CAGO,SAASC,EAAeC,EAAGC,GACjC,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAMD,GAAkB,iBAANA,GAAgC,mBAANA,CAC5E,CAEA,IAAIE,EAOG,SAASC,EAAcC,EAAaC,GAC1C,OAAID,IAAgBC,IACfH,IACJA,EAAuBI,SAASC,cAAc,MAG/CL,EAAqBM,KAAOH,EACrBD,IAAgBF,EAAqBM,KAC7C,CAgDO,SAASC,EAAUC,KAAUC,GACnC,GAAa,MAATD,EAAe,CAClB,IAAK,MAAME,KAAYD,EACtBC,OAASC,GAEV,OAAO/B,CACP,CACD,MAAMgC,EAAQJ,EAAMD,aAAaE,GACjC,OAAOG,EAAMC,YAAc,IAAMD,EAAMC,cAAgBD,CACxD,CAqBO,SAASE,EAAYC,EAAYC,EAAKC,EAAS7B,GACrD,GAAI2B,EAAY,CACf,MAAMG,EAAWC,EAAiBJ,EAAYC,EAAKC,EAAS7B,GAC5D,OAAO2B,EAAW,GAAGG,EACrB,CACF,CAEA,SAASC,EAAiBJ,EAAYC,EAAKC,EAAS7B,GACnD,OAAO2B,EAAW,IAAM3B,EAAKL,EAAOkC,EAAQD,IAAII,QAASL,EAAW,GAAG3B,EAAG4B,KAASC,EAAQD,GAC5F,CAEO,SAASK,EAAiBN,EAAYE,EAASK,EAAOlC,GAC5D,GAAI2B,EAAW,IAAM3B,EAAI,CACxB,MAAMmC,EAAOR,EAAW,GAAG3B,EAAGkC,IAC9B,QAAsBX,IAAlBM,EAAQK,MACX,OAAOC,EAER,GAAoB,iBAATA,EAAmB,CAC7B,MAAMC,EAAS,GACTC,EAAMC,KAAKC,IAAIV,EAAQK,MAAMM,OAAQL,EAAKK,QAChD,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAKI,GAAK,EAC7BL,EAAOK,GAAKZ,EAAQK,MAAMO,GAAKN,EAAKM,GAErC,OAAOL,CACP,CACD,OAAOP,EAAQK,MAAQC,CACvB,CACD,OAAON,EAAQK,KAChB,CAGO,SAASQ,EACfC,EACAC,EACAhB,EACAC,EACAgB,EACAC,GAEA,GAAID,EAAc,CACjB,MAAME,EAAehB,EAAiBa,EAAiBhB,EAAKC,EAASiB,GACrEH,EAAKK,EAAED,EAAcF,EACrB,CACF,CAiBO,SAASI,EAAyBpB,GACxC,GAAIA,EAAQD,IAAIY,OAAS,GAAI,CAC5B,MAAMN,EAAQ,GACRM,EAASX,EAAQD,IAAIY,OAAS,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,IAC3BP,EAAMO,IAAM,EAEb,OAAOP,CACP,CACD,OAAQ,CACT,CAsDO,SAASgB,EAAeC,GAC9B,MAAMC,EAAyB,iBAAVD,GAAsBA,EAAME,MAAM,8BACvD,OAAOD,EAAQ,CAACE,WAAWF,EAAM,IAAKA,EAAM,IAAM,MAAQ,CAAA,EAAgC,KAC3F,CC9RO,MAAMG,EAA8B,oBAAXC,OAGzB,IAAIC,EAAMF,EAAY,IAAMC,OAAOE,YAAYD,MAAQ,IAAME,KAAKF,MAE9DG,EAAML,EAAaM,GAAOC,sBAAsBD,GAAMrE,ECLjE,MAAMuE,EAAQ,IAAIC,IAMlB,SAASC,EAAUR,GAClBM,EAAMzD,SAAS4D,IACTA,EAAKC,EAAEV,KACXM,EAAMK,OAAOF,GACbA,EAAKG,IACL,IAEiB,IAAfN,EAAMO,MAAYV,EAAIK,EAC3B,CC8HO,SAASM,EAAOC,EAAQC,GAC9BD,EAAOE,YAAYD,EACpB,CAQO,SAASE,EAAcH,EAAQI,EAAgBC,GACrD,MAAMC,EAAmBC,EAAmBP,GAC5C,IAAKM,EAAiBE,eAAeJ,GAAiB,CACrD,MAAMK,EAAQC,EAAQ,SACtBD,EAAME,GAAKP,EACXK,EAAMG,YAAcP,EACpBQ,EAAkBP,EAAkBG,EACpC,CACF,CAMO,SAASF,EAAmBN,GAClC,IAAKA,EAAM,OAAOzD,SAClB,MAAMsE,EAAOb,EAAKc,YAAcd,EAAKc,cAAgBd,EAAKe,cAC1D,OAAIF,GAAkC,EAAOG,KAC5C,EAEMhB,EAAKe,aACb,CAMO,SAASE,EAAwBjB,GACvC,MAAMkB,EAAgBT,EAAQ,SAQ9B,OAFAS,EAAcP,YAAc,cAC5BC,EAAkBN,EAAmBN,GAAOkB,GACrCA,EAAcC,KACtB,CAOA,SAASP,EAAkBZ,EAAMQ,GAEhC,OADAV,EAA+B,EAAOsB,MAAQpB,EAAMQ,GAC7CA,EAAMW,KACd,CAuCO,SAASE,EAAOtB,EAAQC,EAAMsB,GACpCvB,EAAOwB,aAAavB,EAAMsB,GAAU,KACrC,CAoBO,SAASE,EAAOxB,GAClBA,EAAKyB,YACRzB,EAAKyB,WAAWC,YAAY1B,EAE9B,CAIO,SAAS2B,EAAaC,EAAYC,GACxC,IAAK,IAAI7D,EAAI,EAAGA,EAAI4D,EAAW7D,OAAQC,GAAK,EACvC4D,EAAW5D,IAAI4D,EAAW5D,GAAG8D,EAAED,EAErC,CAOO,SAASpB,EAAQsB,GACvB,OAAOxF,SAASC,cAAcuF,EAC/B,CA+CO,SAASC,EAAKC,GACpB,OAAO1F,SAAS2F,eAAeD,EAChC,CAIO,SAASE,IACf,OAAOH,EAAK,IACb,CAIO,SAASI,IACf,OAAOJ,EAAK,GACb,CAiBO,SAASK,EAAOrC,EAAMsC,EAAOC,EAASC,GAE5C,OADAxC,EAAKyC,iBAAiBH,EAAOC,EAASC,GAC/B,IAAMxC,EAAK0C,oBAAoBJ,EAAOC,EAASC,EACvD,CAwDO,SAASG,EAAK3C,EAAM4C,EAAWlE,GACxB,MAATA,EAAesB,EAAK6C,gBAAgBD,GAC/B5C,EAAK8C,aAAaF,KAAelE,GAAOsB,EAAK+C,aAAaH,EAAWlE,EAC/E,CAmZO,SAASsE,EAAShB,EAAMC,GAC9BA,EAAO,GAAKA,EACRD,EAAKC,OAASA,IAClBD,EAAKC,KAA8B,EACpC,CA6BO,SAASgB,EAAgBC,EAAOxE,GACtCwE,EAAMxE,MAAiB,MAATA,EAAgB,GAAKA,CACpC,CA8IO,SAASyE,EAAa1C,EAASsB,EAAMqB,GAE3C3C,EAAQ4C,UAAUD,OAAOrB,IAAQqB,EAClC,CASO,SAASE,EAAaC,EAAMC,GAAQC,QAAEA,GAAU,EAAKC,WAAEA,GAAa,GAAU,IACpF,OAAO,IAAIC,YAAYJ,EAAM,CAAEC,SAAQC,UAASC,cACjD,CAoCO,MAAME,EAKZC,QAAS,EAETC,OAAIhH,EAEJiH,OAAIjH,EAEJkH,OAAIlH,EAEJb,OAAIa,EACJmH,YAAYJ,GAAS,GACpBK,KAAKL,OAASA,EACdK,KAAKJ,EAAII,KAAKH,EAAI,IAClB,CAMDrE,EAAEyE,GACDD,KAAKE,EAAED,EACP,CAQDE,EAAEF,EAAMpE,EAAQuB,EAAS,MA5vBnB,IAAqBS,EA6vBrBmC,KAAKJ,IACLI,KAAKL,OACRK,KAAKJ,GA/vBmB/B,EA+vBwChC,EAAe,SA9vB3ExD,SAAS+H,gBAAgB,6BAA8BvC,IAgwB3DmC,KAAKJ,EAAIrD,EAEa,KAApBV,EAAOwE,SAAkB,WAAaxE,EAAOyE,UAGhDN,KAAKF,EACe,aAAnBjE,EAAO0E,QACJ1E,EACmC,EAAS2E,QAChDR,KAAKxE,EAAEyE,IAERD,KAAKlG,EAAEsD,EACP,CAMD8C,EAAED,GACDD,KAAKJ,EAAEa,UAAYR,EACnBD,KAAKH,EAAIa,MAAMC,KACM,aAApBX,KAAKJ,EAAEU,SAA0BN,KAAKJ,EAAEY,QAAQI,WAAaZ,KAAKJ,EAAEgB,WAErE,CAID9G,EAAEsD,GACD,IAAK,IAAItD,EAAI,EAAGA,EAAIkG,KAAKH,EAAEhG,OAAQC,GAAK,EACvCqD,EAAO6C,KAAKF,EAAGE,KAAKH,EAAE/F,GAAIsD,EAE3B,CAMD/C,EAAE4F,GACDD,KAAKpC,IACLoC,KAAKE,EAAED,GACPD,KAAKlG,EAAEkG,KAAKjI,EACZ,CAID6F,IACCoC,KAAKH,EAAElI,QAAQ2F,EACf,EC1mCF,MAAMuD,EAAiB,IAAIC,IAE3B,ICNWC,EDMPC,EAAS,EAoCN,SAASC,EAAYnF,EAAM/D,EAAGC,EAAGkJ,EAAUC,EAAOC,EAAM/J,EAAIgK,EAAM,GACxE,MAAMC,EAAO,OAASJ,EACtB,IAAIK,EAAY,MAChB,IAAK,IAAIlH,EAAI,EAAGA,GAAK,EAAGA,GAAKiH,EAAM,CAClC,MAAMxB,EAAI/H,GAAKC,EAAID,GAAKqJ,EAAK/G,GAC7BkH,GAAiB,IAAJlH,EAAU,KAAKhD,EAAGyI,EAAG,EAAIA,OACtC,CACD,MAAM0B,EAAOD,EAAY,SAASlK,EAAGW,EAAG,EAAIA,SACtC6F,EAAO,YArCd,SAAc4D,GACb,IAAIC,EAAO,KACP5H,EAAI2H,EAAI5H,OACZ,KAAOC,KAAK4H,GAASA,GAAQ,GAAKA,EAAQD,EAAIE,WAAW7H,GACzD,OAAO4H,IAAS,CACjB,CAgC0BA,CAAKF,MAASH,IACjCO,EAAMxF,EAAmBN,IACzB+F,WAAEA,EAAUC,MAAEA,GAAUjB,EAAekB,IAAIH,IA3BlD,SAAkCA,EAAK9F,GACtC,MAAMkG,EAAO,CAAEH,WAAY9E,EAAwBjB,GAAOgG,MAAO,CAAA,GAEjE,OADAjB,EAAeoB,IAAIL,EAAKI,GACjBA,CACR,CAuB0DE,CAAyBN,EAAK9F,GAClFgG,EAAMjE,KACViE,EAAMjE,IAAQ,EACdgE,EAAWM,WAAW,cAActE,KAAQ2D,IAAQK,EAAWO,SAASvI,SAEzE,MAAMwI,EAAYvG,EAAKQ,MAAM+F,WAAa,GAK1C,OAJAvG,EAAKQ,MAAM+F,UAAY,GACtBA,EAAY,GAAGA,MAAgB,KAC7BxE,KAAQqD,cAAqBC,aAChCH,GAAU,EACHnD,CACR,CAOO,SAASyE,EAAYxG,EAAM+B,GACjC,MAAM0E,GAAYzG,EAAKQ,MAAM+F,WAAa,IAAI5H,MAAM,MAC9C+H,EAAOD,EAASE,OACrB5E,EACI6E,GAASA,EAAKC,QAAQ9E,GAAQ,EAC9B6E,IAAuC,IAA9BA,EAAKC,QAAQ,aAErBC,EAAUL,EAAS1I,OAAS2I,EAAK3I,OACnC+I,IACH9G,EAAKQ,MAAM+F,UAAYG,EAAKK,KAAK,MACjC7B,GAAU4B,EACL5B,GAMN/F,GAAI,KACC+F,IACJH,EAAelJ,SAASqK,IACvB,MAAMc,UAAEA,GAAcd,EAAKH,WAEvBiB,GAAWxF,EAAOwF,EAAU,IAEjCjC,EAAekC,QAAO,IAXxB,CChFO,SAASC,EAAsBC,GACrClC,EAAoBkC,CACrB,CAEO,SAASC,IACf,IAAKnC,EAAmB,MAAM,IAAIoC,MAAM,oDACxC,OAAOpC,CACR,CAmFO,SAASqC,IACf,MAAMH,EAAYC,IAClB,MAAO,CAAC7D,EAAMC,GAAUE,cAAa,GAAU,MAC9C,MAAM9G,EAAYuK,EAAUI,GAAG3K,UAAU2G,GACzC,GAAI3G,EAAW,CAGd,MAAM0F,EAAQgB,EAAoC,EAAOE,EAAQ,CAAEE,eAInE,OAHA9G,EAAUW,QAAQ1B,SAASN,IAC1BA,EAAGiM,KAAKL,EAAW7E,EAAM,KAElBA,EAAMmF,gBACd,CACD,OAAO,CAAI,CAEb,CAkEO,SAASC,EAAOP,EAAW7E,GACjC,MAAM1F,EAAYuK,EAAUI,GAAG3K,UAAU0F,EAAMiB,MAC3C3G,GAEHA,EAAUW,QAAQ1B,SAASN,GAAOA,EAAGiM,KAAKtD,KAAM5B,IAElD,CCnLO,MAAMqF,EAAmB,GAEnBC,EAAoB,GAEjC,IAAIC,EAAmB,GAEvB,MAAMC,EAAkB,GAElBC,GAAmCC,QAAQC,UAEjD,IAAIC,IAAmB,EAiBhB,SAASC,GAAoB5M,GACnCsM,EAAiBO,KAAK7M,EACvB,CAyBA,MAAM8M,GAAiB,IAAI9I,IAE3B,ICjDI+I,GDiDAC,GAAW,EAGR,SAASC,KAIf,GAAiB,IAAbD,GACH,OAED,MAAME,EAAkBxD,EACxB,EAAG,CAGF,IACC,KAAOsD,GAAWZ,EAAiB5J,QAAQ,CAC1C,MAAMoJ,EAAYQ,EAAiBY,IACnCA,KACArB,EAAsBC,GACtBuB,GAAOvB,EAAUI,GACjB,CACD,CAAC,MAAOzD,GAIR,MAFA6D,EAAiB5J,OAAS,EAC1BwK,GAAW,EACLzE,CACN,CAID,IAHAoD,EAAsB,MACtBS,EAAiB5J,OAAS,EAC1BwK,GAAW,EACJX,EAAkB7J,QAAQ6J,EAAkBe,KAAlBf,GAIjC,IAAK,IAAI5J,EAAI,EAAGA,EAAI6J,EAAiB9J,OAAQC,GAAK,EAAG,CACpD,MAAMnB,EAAWgL,EAAiB7J,GAC7BqK,GAAeO,IAAI/L,KAEvBwL,GAAeQ,IAAIhM,GACnBA,IAED,CACDgL,EAAiB9J,OAAS,CAC5B,OAAU4J,EAAiB5J,QAC1B,KAAO+J,EAAgB/J,QACtB+J,EAAgBa,KAAhBb,GAEDI,IAAmB,EACnBG,GAAepB,QACfC,EAAsBuB,EACvB,CAGA,SAASC,GAAOnB,GACf,GAAoB,OAAhBA,EAAGuB,SAAmB,CACzBvB,EAAGmB,SACH/M,EAAQ4L,EAAGwB,eACX,MAAMtL,EAAQ8J,EAAG9J,MACjB8J,EAAG9J,MAAQ,EAAE,GACb8J,EAAGuB,UAAYvB,EAAGuB,SAASvK,EAAEgJ,EAAGpK,IAAKM,GACrC8J,EAAGyB,aAAanN,QAAQsM,GACxB,CACF,CC1FA,SAASc,GAASjJ,EAAMkJ,EAAWC,GAClCnJ,EAAKoJ,cAAc9F,EAAa,GAAG4F,EAAY,QAAU,UAAUC,KACpE,CAEA,MAAME,GAAW,IAAI9J,IAKrB,IAAI+J,GAIG,SAASC,KACfD,GAAS,CACRE,EAAG,EACH9J,EAAG,GACHnB,EAAG+K,GAEL,CAIO,SAASG,KACVH,GAAOE,GACX7N,EAAQ2N,GAAO5J,GAEhB4J,GAASA,GAAO/K,CACjB,CAOO,SAASmL,GAAcC,EAAOC,GAChCD,GAASA,EAAM3L,IAClBqL,GAAS1J,OAAOgK,GAChBA,EAAM3L,EAAE4L,GAEV,CASO,SAASC,GAAeF,EAAOC,EAAOpI,EAAQ3E,GACpD,GAAI8M,GAASA,EAAMG,EAAG,CACrB,GAAIT,GAAST,IAAIe,GAAQ,OACzBN,GAASR,IAAIc,GACbL,GAAO5J,EAAE0I,MAAK,KACbiB,GAAS1J,OAAOgK,GACZ9M,IACC2E,GAAQmI,EAAM7H,EAAE,GACpBjF,IACA,IAEF8M,EAAMG,EAAEF,EACR,MAAU/M,GACVA,GAEF,CAKA,MAAMkN,GAAkB,CAAE3E,SAAU,GA+K7B,SAAS4E,GAAgChK,EAAMzE,EAAI0O,EAAQC,GAIjE,IAaIC,EAbAC,EAAS7O,EAAGyE,EAAMiK,EADN,CAAEf,UAAW,SAEzBlF,EAAIkG,EAAQ,EAAI,EAIhBG,EAAkB,KAIlBC,EAAkB,KAClBC,EAAiB,KAOrB,SAASC,IACJD,GAAgB/D,EAAYxG,EAAMuK,EACtC,CAOD,SAASE,EAAKC,EAAStF,GACtB,MAAMtD,EAAiC4I,EAAQxO,EAAI8H,EAEnD,OADAoB,GAAYvH,KAAK8M,IAAI7I,GACd,CACN7F,EAAG+H,EACH9H,EAAGwO,EAAQxO,EACX4F,IACAsD,WACAwF,MAAOF,EAAQE,MACfC,IAAKH,EAAQE,MAAQxF,EACrB0F,MAAOJ,EAAQI,MAEhB,CAMD,SAASC,EAAG7O,GACX,MAAMmJ,MACLA,EAAQ,EAACD,SACTA,EAAW,IAAG4F,OACdA,EAASC,EAAMC,KACfA,EAAOnQ,EAAIoQ,IACXA,GACGf,GAAUL,GAIRW,EAAU,CACfE,MAAO5L,IAAQqG,EACfnJ,KAGIA,IAEJwO,EAAQI,MAAQxB,GAChBA,GAAOE,GAAK,GAGT,UAAWxJ,IACV9D,OAC0BY,IAAzBqN,IAEHnK,EAAKoL,MAAQjB,IAGdA,EAAkD,EAAOiB,MACzDpL,EAAKoL,OAAQ,IAIXf,GAAmBC,EACtBA,EAAkBI,GAIdS,IACHX,IACAD,EAAiBpF,EAAYnF,EAAMgE,EAAG9H,EAAGkJ,EAAUC,EAAO2F,EAAQG,IAE/DjP,GAAGgP,EAAK,EAAG,GACfb,EAAkBI,EAAKC,EAAStF,GAChC+C,IAAoB,IAAMc,GAASjJ,EAAM9D,EAAG,WLhVxC,SAAcW,GAEpB,IAAI4C,EACe,IAAfH,EAAMO,MAAYV,EAAIK,GAEhB,IAAIwI,SAASqD,IACrB/L,EAAMuJ,IAAKpJ,EAAO,CAAEC,EAAG7C,EAAU+C,EAAGyL,GAAW,GAMlD,CKqUGC,EAAMtM,IAkBL,GAjBIsL,GAAmBtL,EAAMsL,EAAgBM,QAC5CP,EAAkBI,EAAKH,EAAiBlF,GACxCkF,EAAkB,KAClBrB,GAASjJ,EAAMqK,EAAgBnO,EAAG,SAC9BiP,IACHX,IACAD,EAAiBpF,EAChBnF,EACAgE,EACAqG,EAAgBnO,EAChBmO,EAAgBjF,SAChB,EACA4F,EACAZ,EAAOe,OAINd,EACH,GAAIrL,GAAOqL,EAAgBQ,IAC1BK,EAAMlH,EAAIqG,EAAgBnO,EAAI,EAAI8H,GAClCiF,GAASjJ,EAAMqK,EAAgBnO,EAAG,OAC7BoO,IAEAD,EAAgBnO,EAEnBsO,MAGOH,EAAgBS,MAAMtB,GAAG7N,EAAQ0O,EAAgBS,MAAMpL,IAGhE2K,EAAkB,UACZ,GAAIrL,GAAOqL,EAAgBO,MAAO,CACxC,MAAMrM,EAAIS,EAAMqL,EAAgBO,MAChC5G,EAAIqG,EAAgBpO,EAAIoO,EAAgBvI,EAAIkJ,EAAOzM,EAAI8L,EAAgBjF,UACvE8F,EAAKlH,EAAG,EAAIA,EACZ,CAEF,SAAUqG,IAAmBC,EAAgB,IAG/C,CACD,MAAO,CACNhP,IAAIY,GACCJ,EAAYsO,IA9Yb9B,KACJA,GAAUN,QAAQC,UAClBK,GAAQiD,MAAK,KACZjD,GAAU,IAAI,KAGTA,IAyYGiD,MAAK,KAGXnB,EAASA,EAFI,CAAElB,UAAWhN,EAAI,KAAO,QAGrC6O,EAAG7O,EAAE,IAGN6O,EAAG7O,EAEJ,EACD2O,MACCL,IACAH,EAAkBC,EAAkB,IACpC,EAEH,CCzaO,SAASkB,GAAkBC,GACjC,YAA0C3O,IAAnC2O,GAAwB1N,OAC5B0N,EACA7G,MAAMC,KAAK4G,EACf,CCsBO,SAASC,GAAiB/B,GAChCA,GAASA,EAAMjK,GAChB,CAQO,SAASiM,GAAgBxE,EAAWpH,EAAQuB,GAClD,MAAMwH,SAAEA,EAAQE,aAAEA,GAAiB7B,EAAUI,GAC7CuB,GAAYA,EAASzE,EAAEtE,EAAQuB,GAE/B6G,IAAoB,KACnB,MAAMyD,EAAiBzE,EAAUI,GAAGsE,SAASC,IAAIxQ,GAAKqL,OAAO7K,GAIzDqL,EAAUI,GAAGwE,WAChB5E,EAAUI,GAAGwE,WAAW3D,QAAQwD,GAIhCjQ,EAAQiQ,GAETzE,EAAUI,GAAGsE,SAAW,EAAE,IAE3B7C,EAAanN,QAAQsM,GACtB,CAGO,SAAS6D,GAAkB7E,EAAWtF,GAC5C,MAAM0F,EAAKJ,EAAUI,GACD,OAAhBA,EAAGuB,YH+DD,SAAgClN,GACtC,MAAMqQ,EAAW,GACXC,EAAU,GAChBrE,EAAiBhM,SAAS6D,IAA2B,IAApB9D,EAAIiL,QAAQnH,GAAYuM,EAAS7D,KAAK1I,GAAKwM,EAAQ9D,KAAK1I,KACzFwM,EAAQrQ,SAAS6D,GAAMA,MACvBmI,EAAmBoE,CACpB,CGpEEE,CAAuB5E,EAAGyB,cAC1BrN,EAAQ4L,EAAGwE,YACXxE,EAAGuB,UAAYvB,EAAGuB,SAAShH,EAAED,GAG7B0F,EAAGwE,WAAaxE,EAAGuB,SAAW,KAC9BvB,EAAGpK,IAAM,GAEX,CAGA,SAASiP,GAAWjF,EAAWnJ,IACC,IAA3BmJ,EAAUI,GAAG9J,MAAM,KACtBkK,EAAiBS,KAAKjB,GH9DlBe,KACJA,IAAmB,EACnBH,GAAiBwD,KAAK/C,KG8DtBrB,EAAUI,GAAG9J,MAAM4O,KAAK,IAEzBlF,EAAUI,GAAG9J,MAAOO,EAAI,GAAM,IAAM,GAAKA,EAAI,EAC9C,CAaO,SAASyM,GACftD,EACA3E,EACA8J,EACAC,EACAC,EACAC,EACAvM,EAAgB,KAChBzC,EAAQ,EAAE,IAEV,MAAMiP,EAAmBzH,EACzBiC,EAAsBC,GAEtB,MAAMI,EAAMJ,EAAUI,GAAK,CAC1BuB,SAAU,KACV3L,IAAK,GAELsP,QACA/D,OAAQ3N,EACRyR,YACAG,MAAOnR,IAEPqQ,SAAU,GACVE,WAAY,GACZa,cAAe,GACf7D,cAAe,GACfC,aAAc,GACd6D,QAAS,IAAI7H,IAAIxC,EAAQqK,UAAYH,EAAmBA,EAAiBnF,GAAGsF,QAAU,KAEtFjQ,UAAWpB,IACXiC,QACAqP,YAAY,EACZjM,KAAM2B,EAAQzC,QAAU2M,EAAiBnF,GAAG1G,MAE7CX,GAAiBA,EAAcqH,EAAG1G,MAClC,IAAIkM,GAAQ,EAgBZ,GAfAxF,EAAGpK,IAAMmP,EACNA,EAASnF,EAAW3E,EAAQiK,OAAS,CAAE,GAAE,CAACzO,EAAGgP,KAAQC,KACrD,MAAMvO,EAAQuO,EAAKlP,OAASkP,EAAK,GAAKD,EAKtC,OAJIzF,EAAGpK,KAAOqP,EAAUjF,EAAGpK,IAAIa,GAAKuJ,EAAGpK,IAAIa,GAAKU,MAC1C6I,EAAGuF,YAAcvF,EAAGoF,MAAM3O,IAAIuJ,EAAGoF,MAAM3O,GAAGU,GAC3CqO,GAAOX,GAAWjF,EAAWnJ,IAE3BgP,CAAG,IAEV,GACHzF,EAAGmB,SACHqE,GAAQ,EACRpR,EAAQ4L,EAAGwB,eAEXxB,EAAGuB,WAAWyD,GAAkBA,EAAgBhF,EAAGpK,KAC/CqF,EAAQzC,OAAQ,CACnB,GAAIyC,EAAQ0K,QAAS,CAIpB,MAAMC,EN4cF,SAAkB1M,GACxB,OAAOmE,MAAMC,KAAKpE,EAAQqE,WAC3B,CM9ciBsI,CAAS5K,EAAQzC,QAC/BwH,EAAGuB,UAAYvB,EAAGuB,SAASuE,EAAEF,GAC7BA,EAAMtR,QAAQ2F,EACjB,MAEG+F,EAAGuB,UAAYvB,EAAGuB,SAASpJ,IAExB8C,EAAQ0H,OAAOR,GAAcvC,EAAUI,GAAGuB,UAC9C6C,GAAgBxE,EAAW3E,EAAQzC,OAAQyC,EAAQlB,QAEnDkH,IACA,CACDtB,EAAsBwF,EACvB,CAmSO,MAAMY,GAQZ/F,QAAKzK,EAQLyQ,WAAQzQ,EAGR0Q,WACCxB,GAAkB9H,KAAM,GACxBA,KAAKsJ,SAAWzS,CAChB,CAQD0S,IAAIlK,EAAM1G,GACT,IAAKf,EAAYe,GAChB,OAAO9B,EAER,MAAM6B,EAAYsH,KAAKqD,GAAG3K,UAAU2G,KAAUW,KAAKqD,GAAG3K,UAAU2G,GAAQ,IAExE,OADA3G,EAAUwL,KAAKvL,GACR,KACN,MAAM6Q,EAAQ9Q,EAAUiK,QAAQhK,IACjB,IAAX6Q,GAAc9Q,EAAU+Q,OAAOD,EAAO,EAAE,CAE7C,CAMDE,KAAKnB,GT/XC,IAAkBoB,ESgYnB3J,KAAKqJ,QThYcM,ESgYKpB,ET/XM,IAA5BhR,OAAOqS,KAAKD,GAAK9P,USgYtBmG,KAAKqD,GAAGuF,YAAa,EACrB5I,KAAKqJ,MAAMd,GACXvI,KAAKqD,GAAGuF,YAAa,EAEtB,EC3foB,oBAAX/N,SAETA,OAAOgP,WAAahP,OAAOgP,SAAW,CAAEC,EAAG,IAAIzO,OAAUyO,EAAEnF,ICK/B,KCA9B,MAAMoF,GAAmB,GAWlB,SAASC,GAASxP,EAAOkM,GAC/B,MAAO,CACNlO,UAAWyR,GAASzP,EAAOkM,GAAOlO,UAEpC,CAWO,SAASyR,GAASzP,EAAOkM,EAAQ7P,GAEvC,IAAIqT,EAEJ,MAAMC,EAAc,IAAI9O,IAIxB,SAAS4G,EAAImI,GACZ,GAAItS,EAAe0C,EAAO4P,KACzB5P,EAAQ4P,EACJF,GAAM,CAET,MAAMG,GAAaN,GAAiBlQ,OACpC,IAAK,MAAMyQ,KAAcH,EACxBG,EAAW,KACXP,GAAiB7F,KAAKoG,EAAY9P,GAEnC,GAAI6P,EAAW,CACd,IAAK,IAAIvQ,EAAI,EAAGA,EAAIiQ,GAAiBlQ,OAAQC,GAAK,EACjDiQ,GAAiBjQ,GAAG,GAAGiQ,GAAiBjQ,EAAI,IAE7CiQ,GAAiBlQ,OAAS,CAC1B,CACD,CAEF,CAMD,SAAS2K,EAAOnN,GACf4K,EAAI5K,EAAGmD,GACP,CAuBD,MAAO,CAAEyH,MAAKuC,SAAQhM,UAhBtB,SAAmBpB,EAAKmT,EAAa1T,GAEpC,MAAMyT,EAAa,CAAClT,EAAKmT,GAMzB,OALAJ,EAAYxF,IAAI2F,GACS,IAArBH,EAAYxO,OACfuO,EAAOxD,EAAMzE,EAAKuC,IAAW3N,GAE9BO,EAAIoD,GACG,KACN2P,EAAY1O,OAAO6O,GACM,IAArBH,EAAYxO,MAAcuO,IAC7BA,IACAA,EAAO,KACP,CAEF,EAEF,CC3FO,MAAMM,GAAOR,GAAS,IAAIhP,MAASiH,IACxC,MAAMwI,EAAWC,aAAY,KAC3BzI,EAAI,IAAIjH,KAAO,GACd,KAEH,MAAO,KACL2P,cAAcF,EAAS,CACxB,IAGH,IAAI/D,GAAQ,IAAI1L,KAET,MAIM4P,GDiHN,SAAiBC,EAAQxT,EAAIyT,GACnC,MAAMC,GAAUrK,MAAMsK,QAAQH,GAExBI,EAAeF,EAAS,CAACF,GAAUA,EACzC,IAAKI,EAAaC,MAAMC,SACvB,MAAM,IAAIhI,MAAM,wDAEjB,MAAMiI,EAAO/T,EAAGwC,OAAS,EACzB,OAAOmQ,GAASc,GAAe,CAAC7I,EAAKuC,KACpC,IAAI6G,GAAU,EACd,MAAMC,EAAS,GACf,IAAIC,EAAU,EACVC,EAAU3U,EACd,MAAM4U,EAAO,KACZ,GAAIF,EACH,OAEDC,IACA,MAAME,EAASrU,EAAG0T,EAASO,EAAO,GAAKA,EAAQrJ,EAAKuC,GAChD4G,EACHnJ,EAAIyJ,GAEJF,EAAU5T,EAAY8T,GAAUA,EAAS7U,CACzC,EAEI8U,EAAgBV,EAAarD,KAAI,CAACnP,EAAOqB,IAC9CtB,EACCC,GACC+B,IACA8Q,EAAOxR,GAAKU,EACZ+Q,KAAa,GAAKzR,GACduR,GACHI,GACA,IAEF,KACCF,GAAW,GAAKzR,CAAC,MAMpB,OAFAuR,GAAU,EACVI,IACO,WACNhU,EAAQkU,GACRH,IAIAH,GAAU,CACb,CAAG,GAEH,CCpKuBO,CAAQpB,IAAOqB,GACpClS,KAAKmS,OAAOD,EAAQnF,IAAS,mNCXnBzN,EAAM,0CAAdkE,EAAuBtB,EAAAkQ,EAAA3O,2BAAfnE,EAAM,+CADXA,EAAM,IAAA+S,GAAA/S,4BADVA,EAAO,yDADVkE,EAKKtB,EAAAoQ,EAAA7O,mDAJFnE,EAAO,IACHA,EAAM,iHANA,IAAAiT,QAAAA,EAAU,IAAEC,GACZC,OAAAA,EAAS,IAAED,+dCyBnBE,EAAApT,KAAK4E,KAAI,GACFyO,EAAArT,KAAKb,IAAG,cZ60Bb,IAAyBmU,EAAK/R,uFY90BtB,yEZ80BiB+R,UAAK/R,YAI9B8B,MAAMkQ,YAAYD,EAAK/R,EAAiC,wFYj2B7CvB,EAAW,KAAKA,EAAI,GAACuD,YAAvCW,EAkBKtB,EAAA4Q,EAAArP,GAjBHxB,EAOM6Q,EAAAC,GANJ9Q,EAKC8Q,EAAAC,UAEH/Q,EAQM6Q,EAAAG,iBADJhR,EAAyBgR,EAAAb,2CAbXnU,EAAAqB,EAAK,GAAAA,EAAL,MAAAA,KAAKA,EAAI,IAAA4T,MAAA7M,KAAA8M,sCACXlV,EAAAqB,EAAK,GAAAA,EAAL,MAAAA,KAAKA,EAAI,IAAA4T,MAAA7M,KAAA8M,wCAMTlV,EAAAqB,EAAO,GAAAA,EAAP,MAAAA,KAAOA,EAAI,IAAA4T,MAAA7M,KAAA8M,sCACblV,EAAAqB,EAAO,GAAAA,EAAP,MAAAA,KAAOA,EAAI,IAAA4T,MAAA7M,KAAA8M,mCAIpB,EAAAvT,GAAA8S,KAAAA,EAAApT,KAAK4E,KAAI,KAAAiB,EAAAiO,EAAAV,GACF,EAAA9S,GAAA+S,KAAAA,EAAArT,KAAKb,IAAG,KAAA0G,EAAAkO,EAAAV,qBAhBFrT,EAAW,KAAKA,EAAI,GAACuD,kEAT1ByQ,EAAI,CAAKzQ,GAAI,EAAGqB,KAAM,GAAIzF,IAAK,KAAE+T,GACjCe,YAAAA,EAAc,GAACf,EAEpB,MAAApH,EAAW3B,+FAEI,IAAA2B,EAAS,UAAkBkI,SAC7B,IAAAlI,EAAS,QAAgBkI,sVCSEhU,EAAM,gQAD3CA,EAAI,yBAATY,OAAIC,GAAA,uMAFVqD,EAMMtB,EAAAsR,EAAA/P,GALJxB,EAIKuR,EAAAC,0FAHInU,EAAI,YAATY,OAAIC,GAAA,EAAA,8GAAJD,OAAIC,EAAAuT,EAAAxT,OAAAC,GAAA,0CAAJD,OAAIC,GAAA,wIAbGwT,EAAI,IAAAnB,GACJe,YAAAA,EAAc,GAACf,EAEpB,MAAApH,EAAW3B,+FAEDhF,IACdmP,EAAA,EAAAL,EAAc9O,EAAMkB,OAAO2N,KAAKzQ,IAChCuI,EAAS,SAAU3G,EAAMkB,OAAM,6tCCmDvBkO,EAAAvU,KAAOuB,MAAK,+BADDiE,EAAAgP,EAAA,YAAAC,EAAAzU,KAAOoG,oEAAtBlC,EAECtB,EAAA4R,EAAArQ,4BAFsDnE,EAAY,kBAC/D,EAAAM,GAAAiU,KAAAA,EAAAvU,KAAOuB,MAAK,KAAAsE,EAAAgB,EAAA0N,GADD,EAAAjU,GAAAmU,KAAAA,EAAAzU,KAAOoG,8FASjBsO,EAAA1U,KAAMuD,GAAE,GACR6P,EAAApT,KAAM4E,KAAI,GACVyO,EAAArT,KAAMb,IAAG,kOAHEa,EAAQ,KAAKA,EAAK,GAAC4E,cAArCV,EAIKtB,EAAA+R,EAAAxQ,GAHHxB,EAAmBgS,EAAAC,iBACnBjS,EAAqBgS,EAAAE,iBACrBlS,EAAoBgS,EAAAG,+CAH+BnW,EAAAqB,EAAY,GAAAA,EAAZ,MAAAA,KAAYA,EAAK,IAAA4T,MAAA7M,KAAA8M,gCAC/D,EAAAvT,GAAAoU,KAAAA,EAAA1U,KAAMuD,GAAE,KAAAsC,EAAAkP,EAAAL,GACR,EAAApU,GAAA8S,KAAAA,EAAApT,KAAM4E,KAAI,KAAAiB,EAAAiO,EAAAV,GACV,EAAA9S,GAAA+S,KAAAA,EAAArT,KAAMb,IAAG,KAAA0G,EAAAkO,EAAAV,qBAHErT,EAAQ,KAAKA,EAAK,GAAC4E,4DAT9BoQ,EAAA3G,GAAArO,KAAKiV,6BAAVrU,OAAIC,GAAA,qBAQD,IAAAqU,EAAA7G,GAAArO,KAAKmV,8BAAVvU,OAAIC,GAAA,uQAXVqD,EAmBQtB,EAAAwS,EAAAjR,GAlBNxB,EAQQyS,EAAAC,GAPN1S,EAMK0S,EAAAV,2DAEPhS,EAQQyS,EAAAE,gFAfGN,EAAA3G,GAAArO,KAAKiV,gBAAVrU,OAAIC,GAAA,EAAA,mHAAJD,yBAQGsU,EAAA7G,GAAArO,KAAKmV,iBAAVvU,OAAIC,GAAA,EAAA,mHAAJD,0EAjEOkE,EAAI,CACbmQ,OAAM,GACNE,QAAO,KAAAjC,GAEEqC,SAAAA,EAAW,IAAErC,EAElB,MAAApH,EAAW3B,IAeXqL,EAAa,CAAAC,EAAQrP,EAAMsP,KAC3B,IAEAC,EAFAL,EAAQlW,SAASwW,cAAc,SAC/BC,EAAYpO,MAAMC,KAAK4N,EAAMQ,aAEzB1P,OACD,OACHuP,EAAO,CAAII,EAAMC,KACDjU,KAAKkU,MAAMF,EAAKG,MAAMT,GAAQjO,WAC9BzF,KAAKkU,MAAMD,EAAKE,MAAMT,GAAQjO,WACrCuO,EAAKG,MAAMT,GAAQjO,UAAYwO,EAAKE,MAAMT,GAAQjO,qBAGxD,SACHmO,EAAO,CAAII,EAAMC,IACRD,EAAKG,MAAMT,GAAQjO,UAAYwO,EAAKE,MAAMT,GAAQjO,oBAGxD,SACHmO,EAAO,CAAII,EAAMC,IACRD,EAAKG,MAAMT,GAAQjO,UAAYwO,EAAKE,MAAMT,GAAQjO,UACrD,GACC,EAIXqO,EAAUM,KAAKR,GACD,SAAVD,GACFG,EAAUO,UAEZd,EAAM3S,UAAUkT,EAAS,uFA1CNQ,GAAUvK,EAAS,aAAcuK,GAEhC1P,IAChB,GAAoB,MAApBA,EAAE/D,OAAO0E,QAAe,WACxBkN,EAAK7N,EAAE/D,OACX4S,EAAUhB,EAAG8B,UAAW9B,EAAG+B,QAAQnQ,KAAMoO,EAAG+B,QAAQb,OAC3B,QAArBlB,EAAG+B,QAAQb,MACblB,EAAG+B,QAAQb,MAAQ,OAEnBlB,EAAG+B,QAAQb,MAAQ,scCdjB,4HADoB1P,EAAAwQ,EAAA,WAAS,IAATxW,cAA5BkE,EAEStB,EAAA4T,EAAArS,qKAFmB6B,EAAAwQ,EAAA,WAAS,IAATxW,sIAJfyW,KAAAA,GAAO,GAAKvD,GACZ3P,GAAAA,EAAK,OAAK2P,8NC4GhB,SAASwD,GAAW7P,GAC1B,OAAOA,EAAI,GAAM,EAAMA,EAAIA,EAAIA,EAAI,GAAMnG,KAAKiW,IAAI,EAAM9P,EAAI,EAAK,GAAO,CACzE,CAgBO,SAAS+P,GAAS/P,GACxB,MAAMpE,EAAIoE,EAAI,EACd,OAAOpE,EAAIA,EAAIA,EAAI,CACpB,CAkJO,SAASoU,GAAShQ,GACxB,QAASA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,CAC9B,CC5QO,SAASiQ,GACfjU,GACAqF,MAAEA,EAAQ,EAACD,SAAEA,EAAW,IAAG4F,OAAEA,EAAS6I,GAAUK,OAAEA,EAAS,EAACC,QAAEA,EAAU,GAAM,CAAE,GAEhF,MAAM3T,EAAQ4T,iBAAiBpU,GACzBqU,GAAkB7T,EAAM2T,QACxBvU,EAAqB,SAAjBY,EAAMmG,OAAoB,GAAKnG,EAAMmG,OACzC2N,EAAKD,GAAkB,EAAIF,IAC1BzV,EAAO6V,GAAQ9V,EAAeyV,GACrC,MAAO,CACN7O,QACAD,WACA4F,SACAG,IAAK,CAACqJ,EAAIC,IAAM,YAAYJ,EAAiBC,EAAKG,cAAc7U,UAAU6U,EAAI/V,IAAQ6V,MAExF,CAUO,SAASG,GAAK1U,GAAMqF,MAAEA,EAAQ,EAACD,SAAEA,EAAW,IAAG4F,OAAEA,EAASC,GAAW,IAC3E,MAAMnB,GAAKsK,iBAAiBpU,GAAMmU,QAClC,MAAO,CACN9O,QACAD,WACA4F,SACAG,IAAMnH,GAAM,YAAYA,EAAI8F,EAE9B,CAUO,SAAS6K,GACf3U,GACAqF,MAAEA,EAAQ,EAACD,SAAEA,EAAW,IAAG4F,OAAEA,EAAS+I,GAAQ9Y,EAAEA,EAAI,EAAC2Z,EAAEA,EAAI,EAACT,QAAEA,EAAU,GAAM,CAAE,GAEhF,MAAM3T,EAAQ4T,iBAAiBpU,GACzBqU,GAAkB7T,EAAM2T,QACxBU,EAAgC,SAApBrU,EAAMqU,UAAuB,GAAKrU,EAAMqU,UACpDP,EAAKD,GAAkB,EAAIF,IAC1BW,EAAQC,GAAStW,EAAexD,IAChC+Z,EAAQC,GAASxW,EAAemW,GACvC,MAAO,CACNvP,QACAD,WACA4F,SACAG,IAAK,CAACnH,EAAGyQ,IAAM,sBACDI,gBAAwB,EAAI7Q,GAAK8Q,IAASC,OAAW,EAAI/Q,GAAKgR,IAASC,uBACzEZ,EAAiBC,EAAKG,IAEpC,CAUO,SAASS,GAAMlV,GAAMqF,MAAEA,EAAQ,EAACD,SAAEA,EAAW,IAAG4F,OAAEA,EAAS+I,GAAQoB,KAAEA,EAAO,KAAQ,CAAA,GAC1F,MAAM3U,EAAQ4T,iBAAiBpU,GACzBmU,GAAW3T,EAAM2T,QACjBiB,EAA4B,MAATD,EAAe,SAAW,QAC7CE,EAAyBxW,WAAW2B,EAAM4U,IAC1CE,EAAgC,MAATH,EAAe,CAAC,MAAO,UAAY,CAAC,OAAQ,SACnEI,EAAmCD,EAAqBxJ,KAC5DhI,GAAM,GAAGA,EAAE,GAAG0R,gBAAgB1R,EAAEvG,MAAM,OAElCkY,EAAsB5W,WAAW2B,EAAM,UAAU+U,EAAiC,OAClFG,EAAoB7W,WAAW2B,EAAM,UAAU+U,EAAiC,OAChFI,EAAqB9W,WAAW2B,EAAM,SAAS+U,EAAiC,OAChFK,EAAmB/W,WAAW2B,EAAM,SAAS+U,EAAiC,OAC9EM,EAA2BhX,WAChC2B,EAAM,SAAS+U,EAAiC,YAE3CO,EAAyBjX,WAC9B2B,EAAM,SAAS+U,EAAiC,YAEjD,MAAO,CACNlQ,QACAD,WACA4F,SACAG,IAAMnH,GAEL,6BAAYnG,KAAKkY,IAAQ,GAAJ/R,EAAQ,GAAKmQ,KAC/BiB,MAAqBpR,EAAIqR,eACjBC,EAAqB,OAAOtR,EAAIyR,eAChCH,EAAqB,OAAOtR,EAAI0R,cACjCJ,EAAqB,OAAOtR,EAAI2R,cAChCL,EAAqB,OAAOtR,EAAI4R,cAChCN,EAAqB,aAAatR,EAAI6R,cACtCP,EAAqB,aAAatR,EAAI8R,OAEnD,CAUO,SAASE,GACfhW,GACAqF,MAAEA,EAAQ,EAACD,SAAEA,EAAW,IAAG4F,OAAEA,EAAS+I,GAAQnJ,MAAEA,EAAQ,EAACuJ,QAAEA,EAAU,GAAM,CAAE,GAE7E,MAAM3T,EAAQ4T,iBAAiBpU,GACzBqU,GAAkB7T,EAAM2T,QACxBU,EAAgC,SAApBrU,EAAMqU,UAAuB,GAAKrU,EAAMqU,UACpDoB,EAAK,EAAIrL,EACT0J,EAAKD,GAAkB,EAAIF,GACjC,MAAO,CACN9O,QACAD,WACA4F,SACAG,IAAK,CAACqJ,EAAIC,IAAM,sBACFI,WAAmB,EAAIoB,EAAKxB,uBAC9BJ,EAAiBC,EAAKG,UAGpC,ihBCzE2BtX,EAAI,yOAAE,6EAEa,gKAHvCA,EAAS,IAAA+S,GAAA/S,sGAGuBA,EAAK,oMAnBtCA,EAAO,6FATbkE,EAMEtB,EAAA6Q,EAAAtP,YAEFD,EAqBMtB,EAAA+Q,EAAAxP,yHA/BqBnE,EAAa,kBAI1BA,EAAK,gBACPA,EAAK,uJAsBVA,EAAS,kLAhBVA,EAAO,uFAMTkI,MAAO,EACPD,SAAU,IACVwP,GAAI,IACJT,QAAS,GACTnJ,OAAQgJ,+FAJR3O,MAAO,EACPD,SAAU,IACVwP,GAAI,IACJT,QAAS,GACTnJ,OAAQgJ,4KA1DCkC,UAAAA,GAAY,GAAK7F,GACjB8F,QAAAA,EAAU,SAAO9F,EAEtB,MAAApH,EAAW3B,IAGX8O,EAAK,IAASnN,EAAS,aAEzBoN,EAEE,MAiBAC,EACgB,oBAAb/Z,UAA4BA,SAASga,chBkCzC,IAAmBhb,SgBhCpB+a,IhBgCoB/a,EgB/Bb,KACP+a,EAAmBE,OAAK,EhB+B7BpP,IAAwBG,GAAGwE,WAAW3D,KAAK7M,4HgB1DhC,IAAS0N,EAAS,cAKLnF,OACP,WAAVA,EAAE2M,QAIQ,QAAV3M,EAAE2M,IAAa,CACX,MAAAtD,EAAQkJ,EAAMI,iBAAiB,KAC/BC,EAAW9R,MAAMC,KAAKsI,GAAOxG,QAAQ5C,GAAMA,EAAE4S,UAAY,IAC3D,IAAAjJ,EAAQgJ,EAAS7P,QAAQtK,SAASga,gBACvB,IAAX7I,GAAgB5J,EAAE8S,WAAUlJ,EAAQ,GACxCA,GAASgJ,EAAS3Y,QAAU+F,EAAE8S,UAAY,EAAI,GAC9ClJ,GAASgJ,EAAS3Y,OAClB2Y,EAAShJ,GAAO8I,QAChB1S,EAAE+S,uBAXFT,+CAwCOC,EAAKS,8ICpC2B3Z,EAAO,sCAAPA,EAAO,6JAGXA,EAAK,sPAE1CkE,EAEItB,EAAAxB,EAAA+C,eADKnE,EAAI,6BAAJA,EAAI,oEAFMA,EAAQ,iCAA3BkE,EAAiCtB,EAAAgX,EAAAzV,2BAAdnE,EAAQ,4IAJOA,EAAI,UAErCA,EAAS,IAAA+S,GAAA/S,4KAATA,EAAS,4PAnBD,IAAA6Z,UAAAA,GAAY,GAAK3G,GACjB4G,SAAAA,EAAW,SAAO5G,GAClB6G,KAAAA,EAAO,IAAE7G,GACT8G,QAAAA,EAAU,gBAAc9G,EAE7B,MAAApH,EAAW3B,iKAEP,KACRmK,EAAA,EAAAuF,GAAY,EAAI,EAGP,KACT/N,EAAS,QAAO,CAAA,GAChBwI,EAAA,EAAAuF,GAAY,EAAK,sVCWP7Z,EAAK,qBACFA,EAAQ,qWAIoCA,EAAe,uEAGhBA,EAAc,0CAJtEkE,EAEMtB,EAAA6Q,EAAAtP,GADJxB,EAA0E8Q,EAAAwG,OAA3Cja,EAAS,aAE1CkE,EAEMtB,EAAA+Q,EAAAxP,GADJxB,EAAwEgR,EAAAuG,OAAzCla,EAAQ,uFAHgBA,EAAe,mBAAvCA,EAAS,QAATA,EAAS,4BAGcA,EAAc,mBAArCA,EAAQ,QAARA,EAAQ,0FALtBA,EAAQ,iCAA3BkE,EAAiCtB,EAAAgX,EAAAzV,4BAAdnE,EAAQ,6CAP1BA,EAAS,IAAA+S,GAAA/S,yEAATA,EAAS,qMArBD,IAAA6Z,UAAAA,GAAY,GAAK3G,GACjB6F,UAAAA,GAAY,GAAI7F,GAChB4G,SAAAA,EAAW,SAAO5G,GAClBiH,UAAAA,EAAY,IAAEjH,GACdkH,SAAAA,EAAW,IAAElH,GACbmH,gBAAAA,EAAkB,QAAMnH,GACxBoH,eAAAA,EAAiB,OAAKpH,EAE3B,MAAApH,EAAW3B,qTAEH,KACZ2B,EAAS,WAAc,CAAAlH,KAAMuV,EAAWhb,IAAKib,IAC7C9F,EAAA,EAAAuF,GAAY,EAAK,EAGR,KACT/N,EAAS,QAAO,CAAA,GAChBwI,EAAA,EAAAuF,GAAY,EAAK,aAagBM,EAASpT,KAAAxF,yBAGT6Y,EAAQrT,KAAAxF,6bCzBrB,0DAGfvB,EAAS,oGAHlBkE,EAIMtB,EAAAsR,EAAA/P,UAFJxB,EAAgEuR,EAAAnO,OAAjC/F,EAAS,WACxC2C,EAAwBuR,EAAAqG,+CAD4Bva,EAAQ,oCAA7BA,EAAS,QAATA,EAAS,aACjCA,EAAS,yDAZL,IAAAwa,UAAAA,EAAY,IAAEtH,EAEnB,MAAApH,EAAW3B,+DAEH,KACZ2B,EAAS,QAAW,CAAA/F,MAAOyU,GAAS,aAMPA,EAASzT,KAAAxF,qnBCc7BvB,EAAK,GAAA,8HAIAA,EAAQ,kBACLA,EAAQ,cACRA,EAAQ,gCAPEgG,EAAAyU,EAAA,SAAAza,OAAYA,EAAQ,qDAN3CkE,EAgBOtB,EAAA2X,EAAApW,GAVLxB,EASQ4X,EAAAE,iBAPN9X,EAME8X,EAAA1U,2CAbQpH,EAAAqB,EAAa,GAAAA,EAAb,MAAAA,KAAaA,EAAQ,IAAA4T,MAAA7M,KAAA8M,sCACvBlV,EAAAqB,EAAa,GAAAA,EAAb,MAAAA,KAAaA,EAAQ,IAAA4T,MAAA7M,KAAA8M,6CAK5B7T,EAAK,GAAA,KAAA6F,EAAAkP,EAAAL,eAIA1U,EAAQ,6BACLA,EAAQ,gCACRA,EAAQ,sBAPEgG,EAAAyU,EAAA,SAAAza,OAAYA,EAAQ,sEAe5BA,EAAO,GAAGA,EAAO,GAAG,WAAS,QAtBvCA,EAAU,yBAAfY,OAAIC,GAAA,gIAqBL,iCAC8C,gLAzBrDqD,EA4BMtB,EAAA8X,EAAAvW,GA3BJxB,EAsBM+X,EAAAjH,GArBJ9Q,EAoBW8Q,EAAAkH,2DAEbhY,EAGM+X,EAAA/G,4BADG3T,EAAW,GAAA2T,qCAvBT3T,EAAU,YAAfY,OAAIC,GAAA,EAAA,mHAAJD,oBAsBeZ,EAAO,GAAGA,EAAO,GAAG,WAAS,KAAA6F,EAAAiO,EAAAV,YACzCpT,EAAW,qEAxCT4a,EAAU,IAAA1H,EAEf,MAAApH,EAAW3B,IACb,IAAA0Q,EAAU,GACVC,EAAc,8FAEIC,IACpBzG,EAAA,EAAAuG,EAAUE,SACJ/G,EAAO4G,EAAWI,MAAMrO,GAAMA,EAAEoO,WAAaA,QACnDD,EAAc9G,EAAKnP,MACnBiH,EAAS,SAAQ,CAAI+O,WAAO,wZCAL,IAAP7a,EAAO,IAAAgL,IAAA,IAAAhL,EAAA,GAAAqK,KAAA6J,aAH3BhQ,EAOEtB,EAAAsR,EAAA/P,QAJyB,IAAPnE,EAAO,mBAAPA,EAAO,yCACfA,EAAQ,0BADAA,EAAO,KAAAkU,EAAA1Q,4BAAPxD,EAAO,yDAVd,IAAAuH,QAAAA,EAAU,IAAE2L,EAEjB,MAAApH,EAAW3B,+DAEM2B,EAAS,QAAW,CAAA/F,MAAOwB,eAMhCA,EAAOR,KAAAvD,ikBC0BCxD,EAAI,yBACHA,EAAK,cAJlBA,EAAS,KAAAwF,EAAAyV,EAAA,MAAAC,uFAGPlb,EAAO,6CACPA,EAAQ,2GANxBkE,EAQMtB,EAAAuY,EAAAhX,GAPJxB,EAEMwY,EAAA1H,GADJ9Q,EAA8B8Q,EAAAwH,UAEhCtY,EAGMwY,EAAAC,GAFJzY,EAAiCyY,EAAAzH,iBACjChR,EAAmCyY,EAAAV,6CAJzB1a,EAAS,kCAGGA,EAAI,2BAAdA,EAAO,mBACIA,EAAK,2BAAhBA,EAAQ,8BANgBqb,IAAAA,EAAAxO,GAAAsO,EAAA5D,GAAA,CAAArP,MAAO,IAAKD,SAAU,MAAG,iCAAzBoT,IAAAA,EAAAxO,GAAAsO,EAAA5D,GAAA,CAAArP,MAAO,IAAKD,SAAU,MAAG,wEAD9DjI,EAAO,IAAA+S,GAAA/S,oEAAPA,EAAO,2LA7BN4E,EACA0W,EACAC,EACAC,EACAC,EACAC,GAAU,QAGRC,EAAa,CAAInT,EAAKoT,IACnBpT,EAAI5H,OAASgb,EAChBpT,EAAIqT,UAAU,EAAGD,EAAY,GAAK,MAClCpT,EtB0BD,IAAiBpK,SAAAA,uBsBtBhB0d,QAAiBC,MAAoC,8BAAA3N,MAAM/B,GAC7DA,EAAE2P,SAEJ1H,EAAA,EAAAiH,EAAa,GAAAO,EAASG,QAAQ,GAAGrX,KAAKsX,SAASJ,EAASG,QAAQ,GAAGrX,KAAKuX,SAASL,EAASG,QAAQ,GAAGrX,KAAKwX,QAC1G9H,EAAA,EAAAkH,EAAWM,EAASG,QAAQ,GAAGX,OAC/BhH,EAAA,EAAA1P,EAAO+W,EAAcJ,EAdL,KAehBjH,EAAA,EAAAgH,EAAQK,EAAcH,EAfN,SAgBhBC,EAAYK,EAASG,QAAQ,GAAGI,QAAQC,QACxChI,EAAA,EAAAoH,GAAU,ItBebzR,IAAwBG,GAAGsE,SAASzD,KAAK7M,wVuBlCf4B,EAAI,yCAA7BkE,EAAyCtB,EAAA2Z,EAAApY,yBAAhBnE,EAAI,2CAD1BA,EAAQ,IAAA+S,GAAA/S,oEAARA,EAAQ,0HAJA,IAAAwc,SAAAA,GAAW,GAAKtJ,GAChBuJ,KAAAA,EAAO,IAAEvJ,+xBCKlBhP,EAAyDtB,EAAA6Q,EAAAtP,YACzDD,EAAyDtB,EAAA+Q,EAAAxP,YACzDD,EAAmEtB,EAAA8X,EAAAvW,YACnED,EAA2DtB,EAAAwY,EAAAjX,YAC3DD,EAA0EtB,EAAAuY,EAAAhX,wIAFnDuY,IAAAA,EAAA7P,GAAA6N,EAAAlD,GAAA,CAAA1Z,EAAG,KAAE,oFAEHud,IAAAA,EAAAxO,GAAAsO,EAAAtC,GAAA,CAAApL,MAAO,IAAC,yGAFViP,IAAAA,EAAA7P,GAAA6N,EAAAlD,GAAA,CAAA1Z,EAAG,KAAE,sDAEHud,IAAAA,EAAAxO,GAAAsO,EAAAtC,GAAA,CAAApL,MAAO,IAAC,kLAL9BzN,EAAO,IAAA+S,4CADoC,mHADlD7O,EASMtB,EAAAsR,EAAA/P,GARJxB,EAAgDuR,EAAAnO,aAAX/F,EAAO,kFAAPA,EAAO,IACvCA,EAAO,0KALR,IAAA2c,GAAU,sBAIuBA,EAAO5V,KAAA6V,yqBCsEjC,sFADJC,EAAa,IAAb7c,EAAa,IAAI,SAAW,yBAFjB,iCACcA,EAAQ,mFAARA,EAAQ,KACjC,MAAAM,GAAAuc,KAAAA,EAAa,IAAb7c,EAAa,IAAI,SAAW,YAAS6F,EAAAiX,EAAAD,kOA9BF7c,EAAa,uKAMlCA,EAAW,4EAsBvBA,EAAQ,IAAA+S,uFAjBA/S,EAAa,qDAGXA,EAAQ,+DAKCA,EAAK,yBAAiBA,EAAgB,wDAE1BA,EAAW,qpBA3BrDkE,EA2CMtB,EAAAma,EAAA5Y,GA1CJxB,EAEMoa,EAAAtJ,uBACN9Q,EA2BMoa,EAAA3B,GA1BJzY,EAkBMyY,EAAAzH,2HACNhR,EAMMyY,EAAAV,+DAER/X,EASMoa,EAAAC,GARJra,EAOMqa,EAAA7B,oEAMMnb,EAAe,sBACnBA,EAAe,wBACbA,EAAe,oNCvFtB,SAA2Bid,EAAQC,GACzC,MAAM3R,EAAS,CAAA,EACT4R,EAAc,CAAA,EACdC,EAAgB,CAAEnd,QAAS,GACjC,IAAIY,EAAIoc,EAAOrc,OACf,KAAOC,KAAK,CACX,MAAM8L,EAAIsQ,EAAOpc,GACX+F,EAAIsW,EAAQrc,GAClB,GAAI+F,EAAG,CACN,IAAK,MAAM0M,KAAO3G,EACX2G,KAAO1M,IAAIuW,EAAY7J,GAAO,GAErC,IAAK,MAAMA,KAAO1M,EACZwW,EAAc9J,KAClB/H,EAAO+H,GAAO1M,EAAE0M,GAChB8J,EAAc9J,GAAO,GAGvB2J,EAAOpc,GAAK+F,CACf,MACG,IAAK,MAAM0M,KAAO3G,EACjByQ,EAAc9J,GAAO,CAGvB,CACD,IAAK,MAAMA,KAAO6J,EACX7J,KAAO/H,IAASA,EAAO+H,QAAO3T,GAErC,OAAO4L,CACR,MAEkC8R,EDoBXrd,EAAW,GCnBF,iBAAjBqd,GAA8C,OAAjBA,EAAwBA,EAAe,SAD5E,IAA2BA,2CDyBfrd,EAAa,uHAQFA,EAAK,kxB9B4F5B,IAAwCR,EAAOE,EAAPF,KAAOE,iBAC3C0K,GAAGwE,WAAW3D,KAAK1L,EAAUC,EAAOE,I8B5IlC,IAAAuT,QAAAA,EAAOE,OAAEA,GAAMD,GACfmB,KAAAA,EAAIJ,YAAEA,GAAWf,SACjBkC,GAAKlC,aACLsH,GAAStH,cACT0H,GAAU1H,eACVoK,GAAWpK,GACXqK,cAAAA,EAAapD,UACtBA,EAAY,GAAEC,SACdA,EAAW,IAAElH,GACJqC,SAAAA,EAAW,IAAErC,GACbsJ,SAAAA,GAAW,EAAIC,KACxBA,EAAO,IAAEvJ,EAGL,MAAApH,EAAW3B,yhBACMhF,GAAU2G,EAAS,gBAAiB3G,EAAMkB,OAAO2N,MAC9C7O,GAAU2G,EAAS,mBAAoB3G,EAAMkB,QACrDlB,GAAU2G,EAAS,WAAY3G,EAAMkB,QAClClB,GAAU2G,EAAS,cAAe3G,EAAMkB,QACpClB,GAAU2G,EAAS,kBAAmB3G,EAAMkB,+JErChE,MCIDmX,GAAM,s3CAAQ,CAClB5a,OAAQxD,SAAS2a,KACjBzK,MDNsB,CACtB2D,QAAS,iBACTE,OAAQ,GACRc,YAAa,EACbuG,UAAW,GACXnG,KAAM,CACJ,CAAE9Q,GAAI,EAAGqB,KAAM,SAAUzF,IAAK,8BAC9B,CAAEoE,GAAI,EAAGqB,KAAM,SAAUzF,IAAK,yBAC9B,CAAEoE,GAAI,EAAGqB,KAAM,UAAWzF,IAAK,uBAC/B,CAAEoE,GAAI,EAAGqB,KAAM,WAAYzF,IAAK,wBAChC,CAAEoE,GAAI,EAAGqB,KAAM,SAAUzF,IAAK,wBAEhCiW,MAAO,CACLH,OAAQ,CACN,CAAE1T,MAAO,KAAM6E,KAAM,UACrB,CAAE7E,MAAO,OAAQ6E,KAAM,UACvB,CAAE7E,MAAO,MAAO6E,KAAM,WAExB+O,QAAS,CACP,CAAE5R,GAAI,EAAGqB,KAAM,SAAUzF,IAAK,8BAC9B,CAAEoE,GAAI,EAAGqB,KAAM,SAAUzF,IAAK,yBAC9B,CAAEoE,GAAI,EAAGqB,KAAM,UAAWzF,IAAK,uBAC/B,CAAEoE,GAAI,EAAGqB,KAAM,WAAYzF,IAAK,wBAChC,CAAEoE,GAAI,EAAGqB,KAAM,SAAUzF,IAAK,yBAGlCoe,eAAe,EACfD,YAAa,CACXzD,WAAW,EACXC,SAAU,QACVC,KAAM,kCAERa,WAAY,CACV,CACEG,SAAU,IACV0C,MAAO,IACP5Y,KAAM,uFAER,CACEkW,SAAU,IACV0C,MAAO,IACP5Y,KAAM,uFAER,CACEkW,SAAU,IACV0C,MAAO,IACP5Y,KAAM,2FCrCN6Y,GAAYvY,IAChBqY,GAAI/M,KAAK,CACPgM,KAAMe,GAAIf,KACNe,GAAIf,KAAO,KAAOkB,KAAKC,UAAUzY,GACjCwY,KAAKC,UAAUzY,KAErB/F,SAASwW,cAAc,aAAaiI,UAClCze,SAASwW,cAAc,aAAakI,YAAY,SAGpDN,GAAIlN,IAAI,iBAAkBnL,IACxBqY,GAAI/M,KAAK,CACPwC,QAAS,gBAAgB9N,EAAMkB,OAAOzB,OACtCuO,OAAQ,OAAOhO,EAAMkB,OAAO9C,KAC5BgS,SAAUpQ,EAAMkB,OAAOzB,OAEzB8Y,GAASvY,EAAMkB,OAAO,IAGxBmX,GAAIlN,IAAI,oBAAqBnL,IAC3BqY,GAAI/M,KAAK,CACPwC,QAAS,gBAAgB9N,EAAMkB,OAAOzB,OACtCuO,OAAQ,OAAOhO,EAAMkB,OAAO9C,KAC5BgS,SAAUpQ,EAAMkB,OAAOzB,KACvBqP,YAAa9O,EAAMkB,OAAO9C,KAE5Bma,GAASvY,EAAMkB,OAAO,IAGxBmX,GAAIlN,IAAI,QAASnL,IACfqY,GAAI/M,KAAK,CACP0J,UAAWhV,EAAMkB,OAAO2N,KAAKpP,KAC7BwV,SAAUjV,EAAMkB,OAAO2N,KAAK7U,IAC5Boe,eAAe,IAEjBG,GAASvY,EAAMkB,OAAO,IAGxBmX,GAAIlN,IAAI,SAAUnL,IAChBqY,GAAI/M,KAAK,CAAE8M,eAAe,IAC1BG,GAASvY,EAAMkB,OAAO,IAGxBmX,GAAIlN,IAAI,eAAgBnL,IACtBuY,GAASvY,EAAMkB,OAAO,IAGxBmX,GAAIlN,IAAI,SAAUnL,IAChBuY,GAASvY,EAAMkB,OAAO,IAGxBmX,GAAIlN,IAAI,mBAAoBnL,IpB7C1BsI,GAAQ,IAAI1L,IoB8CO,IAGrByb,GAAIlN,IAAI,YAAanL,IACnBqY,GAAI/M,KAAK,CAAE8M,eAAe,IAC1BG,GAASvY,EAAMkB,OAAO","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,19,20,31]}