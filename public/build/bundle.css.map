{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../List.svelte",
    "../../Headline.svelte",
    "../../Table.svelte",
    "../../ModalForm.svelte",
    "../../UserInput.svelte",
    "../../RadioBoxes.svelte",
    "../../ListItem.svelte",
    "../../Modal.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { userActivity, elapsed } from './stores.js'\n\n  import Headline from './components/Headline.svelte'\n  import List from './components/List.svelte'\n  import Table from './components/Table.svelte'\n  import ModalDialog from './components/ModalDialog.svelte'\n  import ModalForm from './components/ModalForm.svelte'\n  import UserInput from './components/UserInput.svelte'\n  import RadioBoxes from './components/RadioBoxes.svelte'\n  import Contenteditable from './components/Contenteditable.svelte'\n\n  export let message = 'Svelte-Starter'\n  export let itemId = ''\n\n  export let list = []\n  export let currentItem = 0\n\n  export let table = {}\n\n  export let userInput = ''\n\n  export let result = ''\n  export let modalDialog = {}\n  export let selections = {}\n\n  let selected = ''\n  let showFormModal = false\n  let valueName = ''\n  let valueUrl = ''\n\n  const listSelection = event => {\n    message = `Clicked item ${event.detail.item.name}`\n    itemId = `Id: ${event.detail.item.id}`\n    selected = event.detail.item.name\n  }\n\n  const handleClickedRow = event => {\n    message = `Clicked item ${event.detail.name}`\n    itemId = `Id: ${event.detail.id}`\n    selected = event.detail.name\n    currentItem = event.detail.id\n  }\n\n  const edit = event => {\n    valueName = event.detail.item.name\n    valueUrl = event.detail.item.url\n    showFormModal = true\n    console.log(event.detail.item)\n  }\n\n  const closeModal = event => {\n    showFormModal = false\n  }\n\n  const handleInput = event => {\n    console.log(event.detail.input)\n  }\n\n  const sendForm = event => {\n    showFormModal = false\n    console.log(event.detail)\n  }\n\n  const handleEvent = event => {\n    console.log(event.detail)\n  }\n\n  const handleUserEvent = event => {\n    userActivity(event)\n  }\n</script>\n\n<style>\n  #container {\n    height: 90%;\n    width: 94%;\n    padding: 2% 2% 3% 3%;\n    border: 1px solid #eee;\n  }\n  .columns {\n    display: flex;\n    padding: 3px;\n  }\n  .columns .left-column {\n    width: 60%;\n    height: inherit;\n    padding: 2% 2% 3% 3%;\n  }\n  .columns .right-column {\n    width: 30%;\n    height: inherit;\n    padding: 2% 2% 3% 3%;\n    display: block;\n  }\n  .footer {\n    margin: 7px;\n    font-size: 10px;\n  }\n</style>\n\n<div id=\"container\">\n  <div>\n    <Headline {message} {itemId} />\n  </div>\n  <div class=\"columns\">\n    <div class=\"left-column\">\n      <List {list} {currentItem} on:select={listSelection} on:edit={edit} />\n\n      <UserInput {userInput} {result} on:input={handleInput} />\n\n      <Contenteditable on:edited={handleInput} />\n    </div>\n    <div class=\"right-column\">\n      <Table {selected} data={table} on:clickedRow={handleClickedRow} />\n\n      <RadioBoxes {selections} on:select={handleEvent} />\n\n      <ModalDialog {...modalDialog} on:close={closeModal} />\n      <!--\n      <ModalForm on:sendForm={sendForm} on:close={closeModal} />\n      -->\n      <ModalForm\n        showModal={showFormModal}\n        {valueName}\n        {valueUrl}\n        on:sendForm={sendForm}\n        on:close={closeModal} />\n    </div>\n  </div>\n  <div class=\"footer\">\n    <div>\n      The user is inactive for {$elapsed} {$elapsed === 1 ? 'second' : 'seconds'}\n    </div>\n  </div>\n</div>\n\n<svelte:window\n  on:mousemove={handleUserEvent}\n  on:click={handleUserEvent}\n  on:keydown={handleUserEvent} />\n",
    "<script>\n  import { createEventDispatcher } from 'svelte'\n  import ListItem from './ListItem.svelte'\n\n  export let list = []\n  export let currentItem = 0\n\n  const dispatch = createEventDispatcher()\n\n  const select = event => {\n    currentItem = event.detail.item.id\n    dispatch('select', event.detail)\n  }\n  const edit = event => dispatch('edit', event.detail)\n</script>\n\n<style>\n  ul {\n    list-style: none;\n    margin: 0px;\n    padding: 0px;\n  }\n</style>\n\n<div>\n  <ul>\n    {#each list as item}\n      <ListItem {currentItem} {item} on:select={select} on:edit={edit} />\n    {/each}\n  </ul>\n</div>\n",
    "<script>\n  export let message = ''\n  export let itemId = ''\n</script>\n\n<style>\n  h1 {\n    font-size: 24pt;\n  }\n  h1 > small {\n    font-size: 12pt;\n    color: #bbb;\n  }\n</style>\n\n<h1>\n  {message}\n  <small>{itemId}</small>\n</h1>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte'\n\n  export let data = ''\n  export let selected = ''\n\n  const dispatch = createEventDispatcher()\n\n  const handleClick = entry => dispatch('clickedRow', entry)\n</script>\n\n<style>\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n    margin-top: 5px;\n    width: 100%;\n  }\n\n  tr:hover td {\n    background: #ddd;\n    cursor: pointer;\n  }\n\n  th,\n  td {\n    padding: 10px;\n    text-align: left;\n  }\n\n  tr.active td {\n    color: green;\n  }\n\n  tr:first-child {\n    border-top: 1px solid #bbb;\n  }\n\n  tr:last-child {\n    border-bottom: 1px solid #bbb;\n  }\n\n  th:first-child {\n    border-left: 1px solid #bbb;\n  }\n\n  th:last-child {\n    border-right: 1px solid #bbb;\n  }\n\n  tbody tr:nth-child(odd) {\n    background: #eee;\n  }\n\n  td:first-child {\n    border-left: 1px solid #bbb;\n  }\n\n  td:last-child {\n    border-right: 1px solid #bbb;\n  }\n</style>\n\n<table>\n  <thead>\n    <tr>\n      {#each data.header as header}\n        <th>{header}</th>\n      {/each}\n    </tr>\n  </thead>\n  <tbody>\n    {#each data.entries as entry}\n      <tr class:active={selected === entry.name} on:click={handleClick(entry)}>\n        <td>{entry.name}</td>\n        <td>{entry.url}</td>\n      </tr>\n    {/each}\n  </tbody>\n</table>\n",
    "<script>\n  import { createEventDispatcher, onDestroy } from 'svelte'\n  import Modal from './Modal.svelte'\n\n  export let showModal = false\n  export let modalForm = true\n  export let headline = 'Modal'\n  export let valueName = ''\n  export let valueUrl = ''\n  export let placeholderName = 'Name'\n  export let placeholderUrl = 'URL'\n\n  const dispatch = createEventDispatcher()\n\n  const sendForm = () => {\n    dispatch('sendForm', { name: valueName, url: valueUrl })\n    showModal = false\n  }\n\n  const close = () => {\n    showModal = false\n    dispatch('close', {})\n  }\n</script>\n\n<style>\n  input[type='text'] {\n    width: 90%;\n  }\n</style>\n\n<!--\n<button on:click={() => (showModal = true)}>Modal Form</button>\n-->\n\n{#if showModal}\n  <Modal {modalForm} on:close={close} on:sendForm={sendForm}>\n    <h2 slot=\"header\">{headline}</h2>\n    <div>\n      <input\n        type=\"text\"\n        bind:value={valueName}\n        value={valueName}\n        placeholder={placeholderName} />\n    </div>\n    <div>\n      <input\n        type=\"text\"\n        bind:value={valueUrl}\n        value={valueUrl}\n        placeholder={placeholderUrl} />\n    </div>\n  </Modal>\n{/if}\n",
    "<script>\n  import { createEventDispatcher } from 'svelte'\n\n  export let userInput = ''\n  export let result = ''\n\n  const dispatch = createEventDispatcher()\n\n  const keypress = () => {\n    dispatch('input', { input: userInput })\n  }\n</script>\n\n<style>\n  input[type='text'] {\n    border-radius: 3px 3px 3px 3px;\n    margin-left: 5px;\n    margin-right: 20px;\n    font-size: 12pt;\n  }\n  div {\n    margin-top: 10px;\n    font-size: 12pt;\n  }\n</style>\n\n<div>\n  Two-way binding\n  <input type=\"text\" bind:value={userInput} on:keyup={keypress} />\n  {userInput}\n  {#if result}\n    <div>{result}</div>\n  {/if}\n</div>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte'\n\n  export let selections = {}\n\n  const dispatch = createEventDispatcher()\n  let current = ''\n  let information = '<p>Nothing to display.</p>'\n\n  const setSelection = selector => {\n    current = selector\n    const item = selections.find(o => o.selector === selector)\n    information = item.text\n    dispatch('select', { current })\n  }\n</script>\n\n<style>\n  .selection-container {\n    display: flex;\n    margin: 3px;\n    margin-bottom: 10px;\n    padding: 3px;\n    border-radius: 0 0 5px 0;\n    box-shadow: 2px 2px 3px #eee;\n  }\n  .selection-container > div:not(:first-child) {\n    margin-left: 10px;\n    margin-top: 10px;\n  }\n  fieldset {\n    border: 1px solid #eee;\n    border-radius: 5px 5px 5px 5px;\n    padding: 10px;\n  }\n  .active {\n    color: #00f;\n  }\n</style>\n\n<div class=\"selection-container\">\n  <div>\n    <fieldset id=\"group1\">\n      {#each selections as { selector, label }, i}\n        <label\n          class:active={current === selector}\n          on:click={setSelection(selector)}>\n          <input type=\"radio\" name=\"selection\" value={selector} />\n          {label}\n        </label>\n      {/each}\n    </fieldset>\n  </div>\n  <div>\n    The user selected {current ? current : 'nothing'}.\n    {@html information}\n  </div>\n</div>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte'\n\n  export let item = { id: 0, name: '' }\n  export let currentItem = 0\n\n  const dispatch = createEventDispatcher()\n\n  const select = () => dispatch('select', { item: item })\n  const edit = () => dispatch('edit', { item: item })\n</script>\n\n<style>\n  li {\n    border: 1px solid #ddd;\n    border-radius: 3px 3px 3px 3px;\n    margin-bottom: 3px;\n    padding: 7px;\n    width: 60%;\n    font-size: 12pt;\n    cursor: pointer;\n  }\n  li span {\n    background-color: #aaa;\n    width: 90%;\n  }\n  .active {\n    background-color: #bbb;\n  }\n  li:hover {\n    border: 1px solid #aaa;\n  }\n</style>\n\n<li class:active={currentItem === item.id}>\n  <div style=\"float:right;\">\n    <buttton on:click={edit(item)}>Edit</buttton>\n  </div>\n  <div on:click={select(item)}>\n    {item.name} -\n    <small>{item.url}</small>\n  </div>\n</li>\n",
    "<script>\n  import { fly } from 'svelte/transition'\n  import { quintOut } from 'svelte/easing'\n  import { createEventDispatcher, onDestroy } from 'svelte'\n\n  export let modalForm = false\n\n  const dispatch = createEventDispatcher()\n\n  const send = () => dispatch('sendForm')\n  const close = () => dispatch('close')\n\n  let modal\n\n  const handleKeydown = e => {\n    if (e.key === 'Escape') {\n      close()\n      return\n    }\n    if (e.key === 'Tab') {\n      const nodes = modal.querySelectorAll('*')\n      const tabbable = Array.from(nodes).filter(n => n.tabIndex >= 0)\n      let index = tabbable.indexOf(document.activeElement)\n      if (index === -1 && e.shiftKey) index = 0\n      index += tabbable.length + (e.shiftKey ? -1 : 1)\n      index %= tabbable.length\n      tabbable[index].focus()\n      e.preventDefault()\n    }\n  }\n\n  const previously_focused =\n    typeof document !== 'undefined' && document.activeElement\n\n  if (previously_focused) {\n    onDestroy(() => {\n      previously_focused.focus()\n    })\n  }\n</script>\n\n<style>\n  .modal-background {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.3);\n  }\n  .modal {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    width: calc(100vw - 4em);\n    max-width: 32em;\n    max-height: calc(100vh - 4em);\n    overflow: auto;\n    transform: translate(-50%, -50%);\n    padding: 1em;\n    border-radius: 0.2em;\n    background: white;\n    text-align: center;\n  }\n  button {\n    display: inline-block;\n    margin-right: 5px;\n  }\n  .sendBtn {\n    background: blue;\n    color: white;\n  }\n</style>\n\n<svelte:window on:keydown={handleKeydown} />\n\n<div class=\"modal-background\" on:click={close} />\n\n<div\n  class=\"modal\"\n  role=\"dialog\"\n  aria-modal=\"true\"\n  bind:this={modal}\n  transition:fly={{ delay: 0, duration: 1000, y: -500, opacity: 0.2, easing: quintOut }}>\n  <slot name=\"header\" />\n  <slot />\n  <!-- svelte-ignore a11y-autofocus -->\n  {#if modalForm}\n    <button class=\"sendBtn\" on:click={send}>Send</button>\n  {/if}\n  <button on:click={close}>Close</button>\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}